<html>
<head>
<title>In re Lowry</title>
<link rel="Stylesheet" type="text/css" href="case.sty">
</head>

<body>








<div class=Section1>

<p class=Name>In re Lowry</p>

<p class=Court>U.S. Court of Appeals Federal Circuit</p>

<p class=CaseDate>August 26, 1994</p>

<p class=CaseCite>32 F.3d 1579, <A HREF="http://iplaw.bna.com/iplw/display/link_res.adp?lt=email&fname=uspq2d_32_1031" title="Link to case for BNA subscribers">32 USPQ2d 1031</A></p>

<p class=TreatiseRef> [Editor's note: This case is discussed in <A HREF="http://digital-law-online.info/"><i>Legal Protection of Digital Information</i></A> in:<br><A HREF="http://digital-law-online.info/lpdi1.0/treatise67.html#secV.">Chapter 5, Section V.</A> (Printed Matter and Computer Software).]</p>

<p class=Judge>Rader, J.</p>

<p class=Paragraph>Edward S. Lowry appeals the U.S. Patent and Trademark Office Board of Patent Appeals and Interferences’ rejection of all claims in Patent Application Serial No. 07/181,105. On July 30, 1993, the Board reversed the rejection of claims 1 through 5 under 35 U.S.C. Section 101 (1988). The Board also affirmed the rejection of claims 1 through 19 under 35 U.S.C. Section 103 (1988) and claims 20 through 29 under 35 U.S.C. Section 102(e) (1988). This court reverses.</p>

<h1>Background</h1>

<p class=Paragraph>Lowry’s patent application&nbsp;– “Data Processing System Having a Data Structure with a Single, Simple Primitive”&nbsp;– relates to the storage, use, and management of information residing in a memory. The PTO does not dispute the features and advantages of Lowry’s claimed invention. The invention provides an efficient, flexible method of organizing stored data in a computer memory.</p>

<p class=Paragraph>A memory stores data according to a particular order or arrangement. Application programs use stored data to perform specified functions. A data model provides the framework for organizing and representing information used by an application program. Data models define permissible data structures&nbsp;– organizational structures imposed upon the data used by the application program&nbsp;– compatible with particular data processing systems. Data structures are the physical implementation of a data model’s organization of the data. Data structures are often shared by more than one application program.</p>

<p class=Paragraph>The prior art contains data models and data structures. Prior art data models are generally one of two kinds: functionally expressive or structurally expressive data models. Functionally expressive data models enable complex nested operations using large blocks of data. These data models, however, are limited to a narrow class of applications and generally require more complex interfaces to functionality. Structurally expressive data models, on the other hand, define more varied data structures capable of representing accurately complex information. These data models, however, make complex nested operations on large blocks of data quite difficult.</p>

<p class=Paragraph>Lowry’s invention seeks to optimize both structural and functional expressiveness. Lowry discloses a data structure accessible by many different application programs. Lowry’s data structure is based upon the “Attributive data model.” The Attributive data model represents complex information in terms of attributes and relationships between attributes. According to Lowry’s specification, “ [a]n attribute expresses the idea that one thing is attributed to another thing.” Thus, the Attributive data model capitalizes on the concept that a database is a collection of attributions, whereby information is represented in terms of its characteristics and relationships to other information.</p>

<p class=Paragraph>In accordance with the Attributive data model, Lowry’s data structure comprises a plurality of attribute data objects (ADOs) stored in memory. An ADO is a single primitive data element “compris[ing] sequences of bits which are stored in the memory <span class=SourcePN>&lt;32 F.3d 1581&gt;</span><A name="32F.3d1581"></A> as electrical (or magnetic) signals that represent information.” It contains information used by the application program and information regarding its relationship with other ADOs. Lowry asserts that his data structure is functionally expressive by virtue of its representation of information in terms of attributes. Lowry also states that “ [s]tructural expressiveness is achieved by making that primitive data object extremely simple and allowing for highly unconstrained interconnections between attribute instances.”</p>

<p class=Paragraph>According to the claimed invention, ADOs have both hierarchical and non-hierarchical interrelationships. A few specific rules govern these relationships. Because the claimed invention uses single ADOs governed by simple organizational rules, Lowry asserts that it may flexibly and accurately represent complex objects and relationships. The hierarchical relationships form a conceptual pyramidal structure. Hierarchical correlations describe “holding” or “being held” relationships. An ADO can “hold” one or more other ADOs. Each ADO, however, can “be held” by only one other ADO. Thus, while capable of holding many others, an ADO can be held by only one other ADO. One ADO, called the apex ADO, holds at least one other ADO but is held by no other ADO. This apex ADO is the only ADO that lacks a being-held relationship. From the apex ADO, the hierarchical relationships fan out in a pyramidal structure.</p>

<p class=Paragraph>ADOs also have non-hierarchical relationships. These are essentially “pointing” relationships between ADOs. There are two basic types of ADOs: (1) element data objects, which refer to only themselves, and (2) relation data objects, which refer to one other ADO, called a referent ADO. A referent <span class=SourcePN>&lt;32 USPQ2d 1033&gt;</span><A name="32USPQ2d1033"></A> ADO is merely an ADO that a relation data object refers to. Each ADO can be a referent ADO for more than one ADO. According to Lowry’s specification, this arrangement of hierarchically and non-hierarchically related single primitive ADOs facilitates software operations such as retrieval, addition, and removal of information in the data structure.</p>

<p class=Paragraph>Claims 1 through 5 claim a memory containing a stored data structure. Claim 1 is representative:</p>

<p class=BlockQuote>1. A memory for storing data for access by an application program being executed on a data processing system, comprising:</p>

<p class=BlockQuote>a data structure stored in said memory, said data structure including information resident in a database used by said application program and including:</p>

<p class=BlockQuote>a plurality of attribute data objects stored in said memory, each of said attribute data objects containing different information from said database;</p>

<p class=BlockQuote>a single holder attribute data object for each of said attribute data objects, each of said holder attribute data objects being one of said plurality of attribute data objects, a being-held relationship existing between each attribute data object and its holder attribute data object, and each of said attribute data objects having a being-held relationship with only a single other attribute data object, thereby establishing a hierarchy of said plurality of attribute data objects;</p>

<p class=BlockQuote>a referent attribute data object for at least one of said attribute data objects, said referent attribute data object being nonhierarchically related to a holder attribute data object for the same at least one of said attribute data objects and also being one of said plurality of attribute data objects, attribute data objects for which there exist only holder attribute data objects being called element data objects, and attribute data objects for which there also exist referent attribute data objects being called relation data objects; and</p>

<p class=Paragraph>an apex data object stored in said memory and having no being-held relationship with any of said attribute data objects, however, at least one of said attribute data objects having a being-held relationship with said apex data object.</p>

<p class=Paragraph>Claims 6 through 19 claim a data processing system executing an application program, <span class=SourcePN>&lt;32 F.3d 1582&gt;</span><A name="32F.3d1582"></A> containing a database, a central processing unit (CPU) means for processing the application program, and a memory means for holding the claimed data structure. Claims 20-23, 25, and 28 specify methods of accessing, creating, adding, and erasing ADOs within the data structure. Claim 24 specifies a method for creating a data structure. Claims 26, 27, and 29 claim methods of creating and erasing non-hierarchical relationships between ADOs and referent ADOs.</p>

<h1>The Proceedings Before The Patent And Trademark Office</h1>

<p class=Paragraph>The examiner rejected claims 1 through 5 under 35 U.S.C. Section 101 as non-statutory subject matter. The examiner also rejected claims 1 through 19 under 35 U.S.C. Section 103 as obvious in light of U.S. Patent No. 4,774,661 (Kumpati). Finally, the examiner rejected claims 20 through 29 under 35 U.S.C. Section 102(e) as anticipated by Kumpati.</p>

<p class=Paragraph>The Board reversed the 35 U.S.C. Section 101 rejection. The Board found that claims l through 5, directed to a memory containing stored information, as a whole, recited an article of manufacture. The Board concluded that the invention claimed in claims 1 through 5 was statutory subject matter.</p>

<p class=Paragraph>When evaluating patentability under sections 102 and 103, the Board failed to give patentable weight to the claimed data structure. The Board stated that the claims on appeal specify relationships between the ADOs stored in the memory. The Board analogized Lowry’s data structure comprised of ADOs to printed matter and relied on this statement from <i>In re Gulack,</i> 703 F.2d 1381, <A HREF="http://iplaw.bna.com/iplw/display/link_res.adp?lt=email&fname=uspq_217_401" title="Link to case for BNA subscribers">217 USPQ 401</A> (Fed. Cir. 1983):</p>

<p class=BlockQuote>Where the printed matter is not functionally related to the substrate, the printed matter will not distinguish the invention from the prior art in terms of patentability. Although the printed matter must be considered, in that situation it may not be entitled to patentable weight.</p>

<p class=Paragraph><i>Id.</i> at 1385.</p>

<p class=Paragraph>In <i>Gulack,</i> this court concluded that “the critical question is whether there exists any new and unobvious functional relationship between the printed matter and the substrate.” <i>Id.</i> at 1386 (footnote omitted). The Board therefore framed the question as whether a new, nonobvious functional relationship exists between the printed matter (data structure with ADOs) and the substrate (memory). The Board determined that Lowry did not show such a functional relationship. Thus, the Board agreed with the examiner that the data structure could not distinguish the claimed invention from the prior art. The Board held that Kumpati, disclosing a CPU using a memory and containing stored data in a data structure, rendered <span class=SourcePN>&lt;32 USPQ2d 1034&gt;</span><A name="32USPQ2d1034"></A> all claims either anticipated or obvious. Lowry appealed.</p>

<h1>Discussion</h1>

<p class=Paragraph>This court reviews the Board’s determination of obviousness <i>de novo. In re Woodruff,</i> 919 F.2d 1575, 1577, <A HREF="http://iplaw.bna.com/iplw/display/link_res.adp?lt=email&fname=uspq2d_16_1934" title="Link to case for BNA subscribers">16 USPQ2d 1934</A>, <A HREF="http://iplaw.bna.com/iplw/display/link_res.adp?lt=email&fname=bna_reporter_page_uspq2d_16_1935" title="Link to page for BNA subscribers">1935</A> (Fed. Cir. 1990). This court reviews factual findings underlying the obviousness determination for clear error. <i>Id.</i> Whether a prior art reference anticipates the claimed invention is a question of fact reviewed under the clearly erroneous standard. <i>In re King,</i> 801 F.2d 1324, 1326, <A HREF="http://iplaw.bna.com/iplw/display/link_res.adp?lt=email&fname=uspq_231_136" title="Link to case for BNA subscribers">231 USPQ 136</A>, <A HREF="http://iplaw.bna.com/iplw/display/link_res.adp?lt=email&fname=bna_reporter_page_uspq_231_138" title="Link to page for BNA subscribers">138</A> (Fed. Cir. 1986).</p>

<p class=Paragraph>The Patent and Trademark Office (PTO) must consider all claim limitations when determining patentability of an invention over the prior art. <i>Gulack,</i> 703 F.2d at 1385. The PTO may not disregard claim limitations comprised of printed matter. <i>See Gulack,</i> 703 F.2d at 1384; <i>see also Diamond v. Diehr,</i> 450 U.S. 175, 191 [<A HREF="http://iplaw.bna.com/iplw/display/link_res.adp?lt=email&fname=uspq_209_1" title="Link to case for BNA subscribers">209 USPQ 1</A>] (1981). This court in<i>Gulack,</i> however, would not give patentable weight to printed matter absent a new and unobvious functional relationship between the printed matter and the substrate. The Board in this case determined that Lowry’s data structures were analogous to printed matter and therefore the specific features of the constituent ADOs deserved no patentable weight without a functional printed matter-substrate relationship. Finding no such functional relationship between the ADOs <span class=SourcePN>&lt;32 F.3d 1583&gt;</span><A name="32F.3d1583"></A> and the memory, the Board refused to consider the specific data structure limitations.</p>

<p class=Paragraph>As an initial matter, this court notes that <i>Gulack </i>cautioned against a liberal use of “printed matter rejections” under section 103:</p>

<p class=BlockQuote>A “printed matter rejection” under Section 103 stands on questionable legal and logical footing. Standing alone, the description of an element of the invention as printed matter tells nothing about the differences between the invention and the prior art or about whether that invention was suggested by the prior art.... [The Court of Customs and Patent Appeals], notably weary of reiterating this point, clearly stated that printed matter may well constitute structural limitations upon which patentability can be predicated.</p>

<p class=Paragraph><i>Gulack,</i> 703 F.2d at 1385 n.8. Despite this cautioning, the Board erroneously extended a printed matter rejection under sections 102 and 103 to a new field in this case, which involves information stored in a memory. This case, moreover, is distinguishable from the printed matter cases. The printed matter cases “dealt with claims defining as the invention certain novel arrangements of printed lines or characters, useful and intelligible only to the human mind.” <i>In re Bernhart,</i> 417 F.2d 1395, 1399, <A HREF="http://iplaw.bna.com/iplw/display/link_res.adp?lt=email&fname=uspq_163_611" title="Link to case for BNA subscribers">163 USPQ 611</A>, <A HREF="http://iplaw.bna.com/iplw/display/link_res.adp?lt=email&fname=bna_reporter_page_uspq_163_615" title="Link to page for BNA subscribers">615</A> (CCPA 1969). The printed matter cases have no factual relevance where “the invention as defined by the claims <i>requires </i>that the information be processed not by the mind but by a machine, the computer.” <i>Id.</i> (emphasis in original). Lowry’s data structures, which according to Lowry greatly facilitate data management by data processing systems, are processed by a machine. Indeed, they are not accessible other than through sophisticated software systems. The printed matter cases have no factual relevance here.</p>

<p class=Paragraph>Nor are the data structures analogous to printed matter. Lowry’s ADOs do not represent merely underlying data in a database. ADOs contain both information used by application programs and information regarding their physical interrelationships within a memory. Lowry’s claims dictate how application programs manage information. Thus, Lowry’s claims define functional characteristics of the memory.</p>

<p class=Paragraph>Contrary to the PTO’s assertion, Lowry does not claim merely the information content of a memory. Lowry’s data structures, while including data resident in a database, depend only functionally on information content. While the information content affects the exact sequence of bits stored in accordance with Lowry’s data structures, the claims require specific electronic structural elements which impart a physical organization on the information stored in memory. Lowry’s invention manages information. As Lowry notes, the data structures provide increased computing efficiency.</p>

<p class=Paragraph>Indeed, Lowry does not seek to patent the Attributive data model in the abstract. Nor does he seek to patent the content of information resident in a database. Rather, Lowry’s data structures impose a physical organization on the data.</p>

<p class=Paragraph>In Lowry’s invention, the stored data adopt no physical “structure” per se. Rather, the stored data exist as a collection of bits having information about relationships between the ADOs. Yet this is the essence of electronic Structure. In <i>Bernhart,</i> this court’s predecessor noted:</p>

<p class=BlockQuote>There is one further rationale used by both the board and the examiner, namely, that the provision of new signals to be stored by the computer does not make it a new machine, i.e. it is <i>structurally </i>the same, no matter how new, useful and unobvious the result.... To this question we say that if a <span class=SourcePN>&lt;32 USPQ2d 1035&gt;</span><A name="32USPQ2d1035"></A> machine is programmed in a certain new and unobvious way, it is physically different from the machine without that program; its memory elements are differently arranged. The fact that these physical changes are invisible to the eye should not tempt us to conclude that the machine has not been changed.</p>

<p class=Paragraph><i>Bernhart,</i> 417 F.2d at 1400 (emphasis added).</p>

<p class=Paragraph>More than mere abstraction, the data structures are specific electrical or magnetic <span class=SourcePN>&lt;32 F.3d 1584&gt;</span><A name="32F.3d1584"></A> structural elements in a memory. According to Lowry, the data structures provide tangible benefits: data stored in accordance with the claimed data structures are more easily accessed, stored, and erased. Lowry further notes that, unlike prior art data structures, Lowry’s data structures simultaneously represent complex data accurately and enable powerful nested operations. In short, Lowry’s data structures are physical entities that provide increased efficiency in computer operation. They are not analogous to printed matter. The Board is not at liberty to ignore such limitations.</p>

<p class=Paragraph>Even assuming, arguendo, that data objects and data structures are analogous to printed matter, the Board erred in its reliance on <i>Gulack.</i> As part of its burden to establish a <i>prima facie </i>case of obviousness, <i>see In re Oetiker,</i> 977 F.2d 1443, 1445, <A HREF="http://iplaw.bna.com/iplw/display/link_res.adp?lt=email&fname=uspq2d_24_1443" title="Link to case for BNA subscribers">24 USPQ2d 1443</A>, <A HREF="http://iplaw.bna.com/iplw/display/link_res.adp?lt=email&fname=bna_reporter_page_uspq2d_24_1444" title="Link to page for BNA subscribers">1444</A> (Fed. Cir. 1992), the burden of establishing the absence of a novel, nonobvious functional relationship rests with the PTO. “If examination at the initial stage does not produce a <i>prima facie </i>case of unpatentability, then without more the applicant is entitled to grant of the patent.” <i>Id.</i> The PTO did not establish that the ADOs, within the context of the entire claims, lack a new and nonobvious functional relationship with the memory. The ADOs follow a particular sequence that enables more efficient data processing operations on stored data. The ADOs facilitate addition, deletion, and modification of information stored in the memory. In sum, the ADO’s perform a function. <i>Gulack</i>requires no more. <i>See Gulack,</i> 703 F.2d at 1386.</p>

<p class=Paragraph>With the foregoing in mind, this court now turns to the specific prior art rejections. The Board rejected claims 1 through 19 under section 103 as obvious over Kumpati. The Board found that claims 20-29 were anticipated by Kumpati. Claims 1 through 19 include a memory, comprising the claimed data structure, for storing data for access by an application program. Claims 20 through 29 describe methods of performing data management operations with respect to the claimed data structure.</p>

<p class=Paragraph>The Kumpati patent, entitled “Database Management System with Active Data Dictionary,” discloses a database management system containing an active data dictionary that the user can access and modify. Kumpati’s data dictionary contains information about the structure and usage of the data stored in the database management system.</p>

<p class=Paragraph>Kumpati discloses a data model within a database management system complete with hierarchical and relational interrelationships. Kumpati further defines an “attribute” as a “function that maps an entity set or relationship set into one or more value sets.” A value set, in turn, “further identifies (or defines) the entity by populating these attributes with specific items of data which define these characteristics.”</p>

<p class=Paragraph>Kumpati does not, however, disclose Lowry’s ADOs and their specific hierarchical and non-hierarchical relationships. More specifically, Kumpati does not disclose the claimed pyramidal arrangement of hierarchically arranged ADOs, complete with apex ADO. Kumpati’s relationship sets are different from Lowry’s relation data objects, having non-hierarchical relationships with other ADOs. Neither are Kumpati’s “attributes,” performing a mapping function, equivalent to Lowry’s ADOs, containing information used by the application program as well as information regarding its interrelationships with other ADOs.</p>

<p class=Paragraph>Lowry’s claimed invention involves an organization of information and its interrelationships which Kumpati neither discloses nor suggests. Kumpati also does not render Lowry’s claims obvious. The Board erred in holding otherwise. Claims 1 through 19 are, as a whole, not obvious in light of Kumpati.</p>

<p class=Paragraph>Because Kumpati does not contain all limitations of claims 20 through 29, the Board erred in holding these claims anticipated by Kumpati. Therefore, this court reverses the section 102 rejection of claims 20 through 29.</p>

<h1>Conclusion</h1>

<p class=Paragraph>The Board erred by denying patentable weight to Lowry’s data structure limitations. <span class=SourcePN>&lt;32 F.3d 1585&gt;</span><A name="32F.3d1585"></A> This court reverses the Board’s determination that claims 1 through 19 are obvious. This court also reverses the Board’s decision that claims 20 through 29 are anticipated under section 102. <i>REVERSED</i>.</p>

</div>

</body>

</html>







