<html>
<head>
<title>Lotus v. Borland</title>
<link rel="Stylesheet" type="text/css" href="case.sty">
</head>

<body>








<div class=Section1>

<p class=Name>Lotus Development Corp. v. Borland International Inc.</p>

<p class=Court>U.S. District Court, District of Massachusetts</p>

<p class=CaseDate>June 30, 1993, August 12, 1993, and August 19, 1993</p>

<p class=CaseCite>831 F.Supp. 223, <A HREF="http://iplaw.bna.com/iplw/display/link_res.adp?lt=email&fname=uspq2d_30_1081" title="Link to case for BNA subscribers">30 USPQ2d 1081</A></p>

<p class=TreatiseRef> [Editor's note: This case is discussed in <A HREF="http://digital-law-online.info/"><i>Legal Protection of Digital Information</i></A> in:<br><A HREF="http://digital-law-online.info/lpdi1.0/treatise23.html#secIII.C.2.">Chapter 2, Section III.C.2.</A> (<i>Borland</i> at the District Court).]</p>

<p class=Judge>Keeton, J.</p>

<p class=Paragraph>On July 31, 1992, the court allowed, in part, a motion for summary judgment filed by plaintiff Lotus Development Corporation (“Lotus”) and denied the cross motion for summary judgment by defendant Borland International, Incorporated (“Borland”). After extended procedural maneuvering, the parties agreed to try remaining liability issues without a jury. An explanation of the proceedings leading up to the trial is essential to precise identification of the issues raised by the parties in the nonjury trial of February 1-3 and March 31-April 2, 1993.</p>

<h1>I. Earlier Proceedings.</h1>

<h2>A. Partial Summary Judgment.</h2>

<p class=Paragraph>This Opinion assumes the reader’s familiarity with the Memorandum and Order allowing, in part, Lotus’s motion for summary judgment. That document was published as <i>Lotus Dev. Corp. v. Borland Int’l Inc.,</i> 799 F. Supp. 203 (D. Mass. 1992) (July 31 Memorandum and Order). In addition, the terminology used in this Opinion follows the terminology set forth in detail in the earlier Memorandum and Order. <i>Id. </i>at 206-208. Background information appears in two earlier documents issued by this court. The first is a Memorandum and Order in this case, <i>Lotus Dev. Corp. v. Borland Int’l.</i>, 788 F. Supp. 78 [<A HREF="http://iplaw.bna.com/iplw/display/link_res.adp?lt=email&fname=uspq2d_22_1641" title="Link to case for BNA subscribers">22 USPQ2d 1641</A>] (D. Mass. 1992). The second is an opinion in a related case involving claims of infringement of copyrights for the Lotus 1-2-3 program. <i>Lotus Dev. </i><span class=SourcePN>&lt;30 USPQ2d 1083&gt;</span><A name="30USPQ2d1083"></A> <i>Corp. v. Paperback Software Int’l</i>, 740 F.Supp. 37 [<A HREF="http://iplaw.bna.com/iplw/display/link_res.adp?lt=email&fname=uspq2d_15_1577" title="Link to case for BNA subscribers">15 USPQ2d 1577</A>] (D. Mass. 1990).</p>

<p class=Paragraph><span class=SourcePN>&lt;831 F.Supp. 207&gt;</span><A name="831F.Supp.207"></A> The July 31 Memorandum and Order explained the standard to be applied in this case for determining copyrightability issues:</p>

<p class=BlockQuote>FIRST, in making the determination of “copyrightability,” the decisionmaker must focus upon alternatives that counsel may suggest, or the court may conceive, along the scale from the most generalized conception to the most particularized, and choose some formulation, some conception of the “idea,” “system,” “process,” “procedure,” or “method”—for the purpose of distinguishing between the idea, system, process, procedure, or method and its expression.</p>

<p class=BlockQuote>. . .</p>

<p class=BlockQuote>SECOND, the decisionmaker must focus upon whether an alleged expression of the idea, system, process, procedure, or method is limited to elements essential to expression of that idea, system, process, procedure, or method (or is one of only a few ways of expressing the idea, system, process, procedure, or method) or instead includes identifiable elements of expression not essential to every expression of that idea, system, process, procedure, or method.</p>

<p class=BlockQuote>THIRD, having identified elements of expression not essential to every expression of the idea, system, process, procedure, or method, the decisionmaker must focus on whether those expressive elements, taken together, are a substantial part of the allegedly copyrightable “work.”</p>

<p class=Paragraph><i>Borland</i>, 799 F.Supp. at 211 (quoting <i>Borland,</i> 788 F.Supp. at 90 (quoting <i>Lotus Dev. Corp.</i> <i>v. Paperback Software Int’l</i>,740 F.Supp. 37, 60-61 [<A HREF="http://iplaw.bna.com/iplw/display/link_res.adp?lt=email&fname=uspq2d_15_1577" title="Link to case for BNA subscribers">15 USPQ2d 1577</A>] (D. Mass. 1990)) (all emphases omitted)).</p>

<p class=Paragraph>Applying this test, I determined that the “idea,” “system,” “process,” “procedure,” or “method” of the Lotus 1-2-3 program is a menu-driven electronic spreadsheet whose</p>

<p class=BlockQuote>user interface involves a system of menus, each menu consisting of less than a dozen commands, arranged hierarchically, forming a tree in which the main menu is the root/trunk of the tree and submenus branch off from higher menus, each submenu being linked to a higher menu by operation of a command, so that all the specific spreadsheet operations available in Lotus 1-2-3 are accessible through the paths of the menu command hierarchy.</p>

<p class=Paragraph><i>Id. </i>at 216-17. (The meanings of menu command, menu structure and menu tree are explained at greater length below.) I concluded also that</p>

<p class=BlockQuote>as a matter of law, Borland’s Quattro products infringe the Lotus 1-2-3 copyright because of (1) the extent of copying of the “menu commands” and “menu structure” that is not <i>genuinely </i>disputed in this case, (2) the extent to which the copied elements of the “menu commands” and “menu structure” contain expressive aspects separable from the functions of the “menu commands” and “menu structure,” and (3) the scope of those copied expressive aspects as an integral part of Lotus 1-2-3.</p>

<p class=Paragraph><i>Id.</i> at 223 (original emphasis).</p>

<p class=Paragraph>Nevertheless, I concluded that determining the scope of relief in this case depends on resolution of disputed factual contentions because Lotus contended and Borland disputed “that the copying of separable expressive elements of the Lotus 1-2-3 user interface into the Quattro programs was greater than the minimum essential to constituting a substantial part of the Lotus 1-2-3 work,” which I had determined on motion for summary judgment not to be genuinely in dispute. <i>Id. </i>In other words, there is no genuine dispute of fact that the Quattro and Quattro Pro programs infringe, but fact issues remain as to the scope of impermissible copying. Specific fact issues apparent on the record at that time concerned (1) whether Borland <span class=SourcePN>&lt;30 USPQ2d 1084&gt;</span><A name="30USPQ2d1084"></A> copied the long prompts of Lotus 1-2-3, (2) whether the long prompts contain expressive elements, and (3) the extent (if any) that functional constraints limit the number of possible ways that the Lotus menu commend hierarchy could have been arranged at the time of its creation. <i>See </i>Order Regulating Jury Trial, September 30, 1992 (Docket No. 232) at 20.</p>

<p class=Paragraph>In addition, I concluded that Lotus was entitled to Summary judgment against Borland on the affirmative defense of waiver, but not on the affirmative defenses of laches <span class=SourcePN>&lt;831 F.Supp. 208&gt;</span><A name="831F.Supp.208"></A> and estoppel.<i> See Borland, </i>799 F.Supp. at 222-23.</p>

<h2>B. Further Proceedings Before Trial.</h2>

<p class=Paragraph>Up to the time of the court’s ruling of July 31, 1992, the parties’ contentions concerned issues raised in the allegations of the “original complaint” filed July 2, 1990, concerning infringement of Lotus 1-2-3 by Quattro and Quattro Pro’s “emulation interface.” Trial for the remaining liability issues in the original complaint was scheduled before a jury. In January 1993, this court permitted Lotus to file a supplemental complaint alleging copyright infringement by Borland in programs containing a “Key Reader” feature (which is described in some detail in the August 12, 1993 Opinion that addresses the issues of the “Key Reader” phase of the trial)&nbsp;– specifically in Quattro Pro versions 2.0, 3.0, 4.0, SE, 4.01 and Quattro Pro for Windows. <i>See </i>Docket 250, Exh. A.</p>

<p class=Paragraph>After these developments and as the parties were preparing for trial of issues raised in the original complaint, the parties entered into a series of stipulations that altered the nature of the proceedings. <i>See </i>Stipulation and Order Regulating Trial (Docket No. 330); Stipulation and Order Regulating Key Reader Trial (Docket No. 349).</p>

<p class=Paragraph>The first set of stipulations concerned trial of issues raised in the original complaint. These stipulations</p>

<p class=BlockQuote>govern the trial of all issues not previously finally decided by way of summary judgment concerning Borland’s alleged liability herein, and all its defenses thereto, <i>excluding </i>the issues raised by Lotus’ Supplemental Complaint concerning the “Key Reader” feature (the “Phase I Trial”).</p>

<p class=Paragraph>Docket No. 330, Para.1. With respect to issues raised in the original complaint, the parties waived jury trial for the liability issues that had previously been scheduled for the Phase I trial.</p>

<p class=Paragraph>With respect to the long prompts, the parties stipulated that:</p>

<p class=BlockQuote>1. The order of display of the long prompts within the “123-compatible” modes of Quattro and Quattro Pro follows the order of display of the menu commands within those modes, and each such long prompt provides a short textual description of the command to which it relates.</p>

<p class=BlockQuote>2. Lotus shall not contend, in this action or any appeal therefrom, that Borland has copied the long prompts of Lotus 1-2-3 in Quattro or Quattro Pro.</p>

<p class=BlockQuote>3. Borland shall not contend, in this action or any appeal therefrom, that Borland has not copied the long prompts of Lotus 1-2-3 in Quattro or Quattro Pro.</p>

<p class=BlockQuote>4. Neither party shall contend, in this action or any appeal therefrom, that the issue of whether or not Borland copied the long prompts of Lotus 1-2-3 in either Quattro or Quattro Pro is material to any other issue that has been or will be resolved in this case.</p>

<p class=Paragraph>Docket No. 330, Exh. A, Paragraphs1-4.</p>

<p class=Paragraph>The second set of stipulations “govern [s] the trial of all liability issues (including any defenses thereto] raised by Lotus’ Supplemental Complaint concerning the ‘Key Reader’ feature (the ‘Phase II Trial’).” Docket No. 349, Para.1. For trial of the liability issues raised by the supplemental complaint, the parties waived their rights to trial by jury. <i>Id.</i></p>

<h2>C. Summary of Issues Before the Court.</h2>

<p class=Paragraph>Phase I of the trial was held on February 1-3, 1993. At that time, the issues before the court were the scope of infringement by Borland and Borland’s affirmative defenses of laches and estoppel (the affirmative defense of waiver having been resolved at summary judgment). After the close of Borland’s evidence, however, Borland was allowed leave to amend its answer to assert an affirmative defense of fair use. <i>See </i>Memorandum and Order, March 30, 1993 (Docket No. 353). In response, Lotus moved for judgment on partial findings. <i>See </i>Fed. R. Civ. P. 52©. After hearing in open court and for the reasons stated on the record, I allowed Lotus’s motion for judgment on the issue of Borland’s fair use defense to the original complaint (Phase I).</p>

<p class=Paragraph>Phase II of the liability trial was held on March 31-April 2, 1993. The issues presented to the court included the full range of lability determinations for the “Key Reader” <span class=SourcePN>&lt;831 F.Supp. 209&gt;</span><A name="831F.Supp.209"></A> supplemental complaint. In addition, the parties tried Borland’s defenses (to the “Key Reader” complaint) of waiver, laches, estoppel, and fair use.</p>

<p class=Paragraph>This opinion addresses the issues raised in Phase I of the trial. On August 12, 1993, the court released an Opinion resolving the issues raised in Phase II.</p>

<h1>II. Scope of Infringement in Phase I Trial.</h1>

<p class=Paragraph>As I understand the parties’ stipulations and arguments, Lotus does not now contend that Borland copied the entire 1-2-3 interface. Rather, Lotus claims that Borland has illegally copied the Lotus 1-2-3 “menu commands” and “menu structure.” Accordingly, the only issues before the court concern copying of the menu commands and structure.</p>

<p class=Paragraph>Borland contends that copying of menu commands and structure is permissible because of functional constraints on formulation of the menu commands and structure. To the extent that Borland contends that the menu commands and structure as a whole are not copyrightable, Borland’s contention was rejected as a matter of law at summary judgment. Nothing Borland presented at the Phase I trial alters my view that there is no genuine dispute that “a large part of the structure and arrangement of the menu commands is not driven entirely by functional considerations.” 759 F. Supp. at 218.</p>

<p class=Paragraph>Although I determined that no genuine dispute of fact had to be resolved in order to determine that the menu commands and structure contain protectable expression, I also determined that disputed factual contentions might have to be resolved to determine the <i>scope </i>of infringement. Among factors bearing on the scope of infringement are (1) the scope of copying, and (2) the nature of the copied work. Given the implications of the idea and the functional considerations, what is the extent of the expression? If there is “essentially only one way to express an idea,” complete copying is permissible. <i>Concrete Mach. Co.</i> <i>v</i>. <i>Classic Lawn Ornaments, Inc.</i>, 843 F.2d 600, 606 [<A HREF="http://iplaw.bna.com/iplw/display/link_res.adp?lt=email&fname=uspq2d_6_1357" title="Link to case for BNA subscribers">6 USPQ2d 1357</A>] (1st Cir. 1988). If there are “only a limited number of ways of expressing the idea,” then proof of “near identity” of copied expression is required to show infringement. <i>Id. </i>For a work “embodying only one of an infinite variety of ways of expressing an idea,” duplication or near identity is not required. <i>Id. </i>at 607. Consequently, there is a “sliding scale” that determines the scope of copyright protection. Accordingly, I first examine more closely the scope of copying and then examine how much of this copying was impermissible.</p>

<h2>A. Menu Commands and Structure—Scope of Copying.</h2>

<h3>1. Defining and describing “menu commands and menu structure.”</h3>

<p class=Paragraph>Omitting details not relevant for resolution of any dispute in this case, one may describe the idea of menu commands and menu structure in the following way.</p>

<p class=Paragraph>Each spreadsheet program described in the evidence before the court has a set of basic executable operations that a user may <span class=SourcePN>&lt;30 USPQ2d 1085&gt;</span><A name="30USPQ2d1085"></A> invoke. Each executable operation does something with data in a spreadsheet (<i>e.g.,</i> erases data in a spreadsheet cell), fixes parameters of a spreadsheet (<i>e.g.,</i> width of a column in a given spreadsheet), fixes parameters of the program (<i>e.g.,</i> hardware configuration or default settings), or performs some other function such as printing or saving a spreadsheet.</p>

<p class=Paragraph>For each spreadsheet program before the court, the number of executable operations is large. Also, the possible methods of presenting available operations to the user is large. One simple approach would be to give each operation a unique name. If this were done, however, the large number of unique names would make it difficult for a user to remember and invoke them expeditiously.</p>

<p class=Paragraph>A common way of overcoming this problem is to develop a menu hierarchy. The first level of the hierarchy presents the user with a “menu” consisting of a limited number of “menu commands.” Some of these menu commands may be executable operations (<i>e.g.,</i> “Quit”) causing the program to do something (<i>i.e.,</i> terminate). When the user invokes an executable command, the program performs the corresponding operation and does not present any further menu options. <span class=SourcePN>&lt;831 F.Supp. 210&gt;</span><A name="831F.Supp.210"></A> To proceed farther in the hierarchy, the user must start again and select a different option.</p>

<p class=Paragraph>Other menu commands are not in the set of executable operations; instead they are “internal” menu commands, each of which substitutes a new menu in place of the menu in which the internal command appears. Like the menu it replaces, the substituted menu (or “submenu”) may consist of a combination of executable commands and internal commands.</p>

<p class=Paragraph>The menu commands and menu structure are commonly described as a “tree.” The imagery is imperfect, however, unless one thinks of a rather unusual tree that has a leaf or two as well as branches at most junctures. In this imagery, some of the choices at each juncture may be branches and others may be leaves. Each branch or leaf has a name. The “name” of the branch or leaf is a “menu command” within the program’s “menu tree”. The user starts at the trunk, and by choosing a branch, starts a climb upward. (One may, of course, also envision an upside- down tree, with the user working downward.)</p>

<p class=Paragraph>If instead of choosing a branch at the first juncture the user chooses an executable operation, no climb occurs. A name (menu command) corresponding to an executable operation is a leaf of the tree. Having reached that leaf, the user cannot climb farther; no new branches are presented. Instead, the operation is executed. To climb farther (or elsewhere in the tree), the user must go back at least a bit (or all the way to the beginning) and choose branches up to a higher level. As long as the user invokes an internal menu command (a branch) at each juncture, the program presents to the user a new set of branches and leaves, and by choosing a branch the user climbs higher.</p>

<p class=Paragraph>The height of the climb (the number of branches that the user must select before reaching a “leaf” or executable operation) varies depending on which choices the user makes at each juncture. Thus, if “Quit” is selected at the first level, the user makes no climb; the user has selected a leaf, not a branch.</p>

<p class=Paragraph>To format a cell as currency data in Lotus 1-2-3, the user climbs three levels up—choosing the range branch, followed by the format branch, followed by the currency leaf.</p>

<p class=Paragraph>Switching the imagery to an upside-down tree (a more common convention in computer software discussion), envision a downward progression. For example, the following is a graphic display [omitted] of the part of the tree a user would climb (or descend) to select the currency operation.</p>

<p class=Paragraph><span class=SourcePN>&lt;831 F.Supp. 211&gt;</span><A name="831F.Supp.211"></A> The term “menu tree” refers to the structure of all of the branches and leaves in the menu hierarchy as well as the names of those branches and leaves (<i>i.e.</i>, the names of the menu commands).</p>

<p class=Paragraph>In the July 31 Memorandum and Order, I concluded that the definition of the “idea,” “system,” “process,” “procedure,” or “method” of Lotus 1-2-3 includes the set of executable operations (leaves) of the tree (although not necessarily the menu command name assigned to each operation). As part of the “idea”, the determination of the function of each executable operation is not protected by copyright law.</p>

<p class=Paragraph>The menu tree expresses to the program user, in hierarchical fashion, the array of available operations. Even though the executable operations are not copyrightable, the menu tree is copyrightable because the (hierarchical) arrangement of the definition and identification of executable operations contains expression. Accordingly, in resolving the parties’ motions for summary judgment, I concluded that many of the details of the menu tree in Lotus 1-2-3 were not a part of the “idea,” “system,” “process,” “procedure,” or “method” of the Lotus 1-2-3 program, but rather a part of the expression of that idea.</p>

<h3>2. The Lotus and Borland menu trees.</h3>

<p class=Paragraph><span class=SourcePN>&lt;30 USPQ2d 1086&gt;</span><A name="30USPQ2d1086"></A> The original complaint alleges infringement of Lotus’s copyright in Lotus 1-2-3 version 2.0 (and earlier versions). In deciding the issues before the court, I have examined both Lotus 1-2-3 version 2.0 and version 2.01. Version 2.01 is a copyrighted derivative work based on version 2.0. Borland points to no differences between these programs that would have a bearing on any issue in this case. A comparison of the menu tree for Lotus version 2.0 (Exhibit 524) and the menu tree accessible through the version 2.01 program also demonstrates no differences material to this litigation. Indeed, the parties earlier stipulated (1) that the menu commands are the same and are displayed in an identical fashion to the user, and (2) that no difference exists between the user interfaces that would have any effect on the issues in this case. <i>See </i>O’Connor Dec’n, Docket No. 108, Exh. H. Accordingly, I will refer to the menu tree generically as the Lotus 1-2-3 menu tree although I have examined both versions 2.0 and 2.01.</p>

<p class=Paragraph>The Lotus 1-2-3 menu tree contains approximately 469 menu commands. <i>See</i> Kieras Dec’n, V:8 at Para.66.</p>

<p class=Paragraph>(The record in this case consists of nine volumes of material. Citations to this record are formatted as Volume:Tab; thus “V:8” means Volume V, Tab 8.)</p>

<p class=Paragraph>Portions of the menu tree are illustrated at various places in the Exhibits. The entire tree is set out in Exhibit 524, A-C, E (the “Flesher Exhibits” which were originally submitted with the summary judgment materials). As the number of commands suggests, the menu tree is quite large.</p>

<p class=Paragraph>The Quattro and Quattro Pro programs have both a native menu tree and a “1-2-3 emulation” menu tree. I do not understand Lotus to contend that the native menu tree infringes any Lotus copyright. Accordingly, when I refer to the Quattro or Quattro Pro menu trees, I refer only to the menu tree used in the program’s 1-2-3 emulation interface.</p>

<p class=Paragraph>The Quattro menu tree contains approximately 3370 menu commands. (Kieras Dec’n, V:8 at Para.77.) This menu tree is illustrated in Flesher Exhibit B. The Quattro Pro version 1.0 menu tree contains approximately 5215 commands (<i>Id. </i>at Para.66.) This menu tree is illustrated in Flesher Exhibit A.</p>

<p class=Paragraph>The Quattro Pro program has been released in several versions, specifically versions 1.0, 2.0, 3.0, 4.0, 4.01, SE, and Quattro Pro for Windows. Only versions 1.0, 2.0, and 3.0 contain the emulation interface. In deciding issues for Phase I of the trial, therefore, when I refer, without further specification, to the Quattro Pro menu tree, I refer only to the emulation menu tree in Quattro Pro versions 1.0, 2.0, and 3.0.</p>

<p class=Paragraph>The entire Lotus menu tree is contained within both the Quattro and Quattro Pro version 1.0 menu trees. For example, the first menu in Quattro Pro version 1.0 contains <span class=SourcePN>&lt;831 F.Supp. 212&gt;</span><A name="831F.Supp.212"></A> an identical copy of the 1-2-3 menu commands, in the same order, but with one new command inserted (“View”). Invoking a Borland command that is identical to a Lotus command produces a menu that is an identical copy of the Lotus submenu, but (in some cases) with one or two new commands inserted. Thus, each menu or submenu in Lotus 1-2-3 is reproduced identically, but with the insertion in the Quattro and Quattro Pro menu trees of some new menu commands and any submenus associated with the new menu commands.</p>

<p class=Paragraph>Put another way, both the Quattro and Quattro Pro version 1.0 menu trees consist of a <i>virtually identical </i>copy of the entire 1-2-3 menu tree, with new branches or leaves inserted at various places.</p>

<p class=Paragraph>Although the above comparison focuses only on version 1.0 of the Quattro Pro menu tree, the scope of copying remains the same for versions 2.0 and 3.0. The only difference between the emulation menu trees in Quattro Pro versions 1.0, 2.0, and 3.0 is that each successive version added new commands. <i>See </i>Warfield Dep’n, III:40 at 72-73. Thus, later versions also contain a virtually identical copy of the Lotus menu tree, with still more new branches or leaves added.</p>

<p class=Paragraph>The presentation of the commands in the Quattro and Quattro Pro programs indicates which commands are found in the 1-2-3 menu tree and which are Borland’s insertions. In Quattro, the new (and only the new) menu commands are followed by a dot at the place where the new command is inserted into the tree. Thus, in Quattro, the “Install” command was inserted into the first level menu followed by a dot. The submenu of “Install” does not have these same dot designations. Such a designation is unnecessary for this submenu, however, because everything within the newly inserted “Install” branch of the tree is new.</p>

<p class=Paragraph>Quattro Pro uses the same approach for differentiating 1-2-3 menu commands and added menu commands, with the exception of “View” in Quattro Pro’s first menu, which has no designation as an inserted command but whose submenu consists of commands each followed by a dot. In addition, in the Quattro Pro menus, a line generally appears separating added menu commands from original 1-2-3 menu commands.</p>

<p class=Paragraph>The disparity in total number of menu commands between the 1-2-3 menu tree and <span class=SourcePN>&lt;30 USPQ2d 1087&gt;</span><A name="30USPQ2d1087"></A> the Quattro and the Quattro Pro menu trees is large, but does not alter the scope of copying. Most of the new commands are clustered together far up in the tree (or down in the upside down tree). For those menus that exist in the Lotus 1-2-3 menu tree, the number of added menu commands is rarely more than one or two. The effect is similar to an identical copy of a book with some paragraphs and lengthy footnotes inserted, and some voluminous appendices attached at the end.</p>

<p class=Paragraph>In short, I adhere to my earlier conclusion that no reasonable factfinder could find that Borland did not take from Lotus 1-2-3 the menu commands and menu command structure substantially as they were. Further, I find that Borland produced a virtually identical copy of 1-2-3 menu tree, albeit with additions, in its Quattro and Quattro Pro emulation interfaces.</p>

<h2>B. Nature of the Work—Scope of Illicit Copying.</h2>

<h3>1. Scope of limitations imposed by functional considerations.</h3>

<h4>a. The functional considerations.</h4>

<p class=Paragraph>Borland advanced the following “constraints” on design of a menu tree.</p>

<p class=BlockQuote>(1) Each menu command was chosen to tell the user the purpose of the menu command and its function.</p>

<p class=BlockQuote>(2) Each menu command was selected so that it had a different first letter from the other menu commands within the same menu.</p>

<p class=BlockQuote>(3) Each menu was set up to have only about seven choices (witnesses referred to this as the “seven plus or minus two rule,” <i>i.e.,</i> no menu should have fewer than five or more than nine commands).</p>

<p class=BlockQuote>(4) The menus were structured so that words within the menu that dealt with similar functions were grouped together.<span class=SourcePN>&lt;831 F.Supp. 213&gt;</span><A name="831F.Supp.213"></A> </p>

<p class=BlockQuote>(5) Executable operations that were likely to be frequently used were located near the top of the (upside down) tree.</p>

<p class=BlockQuote>(6) Menu commands within a menu were arranged from left to right in order of decreasing frequency of use.</p>

<p class=BlockQuote>(7) Commands in submenus were grouped under the menu command to which they relate.</p>

<p class=Paragraph><i>See </i>VII:A:6. Borland also proffered an eighth functional “constraint” of having each menu fit on one line of a computer screen. If this constraint were followed, each menu could have no more than 80 characters (the number of characters across a standard computer terminal screen).</p>

<p class=Paragraph>Borland refers to the above items as “constraints” on design of a menu tree. Lotus contends that they are “guidelines” or “rules of thumb.” The difference in terminology is largely if not entirely semantic. Nevertheless, the different terms raise different images. “Constraint” implies a rule that must not be violated. If “constraint” is defined this way, the eight listed items are not “constraints.” Each of them is violated somewhere in the Lotus 1-2-3 menu tree (except possibly the second, which has been violated in other menu trees, <i>e.g., </i>Excel 3.0 with “<i> S</i> ave” and “Save <i>A</i>s” in the same menu, and the last, which was violated in SuperCalc). Moreover, the alleged “constraints” are full of terms that offer little guidance on how to conform. For example, when is one menu command “similar” to another? The answer may be easy in some cases and entirely within the discretion of the programmer in others.</p>

<p class=Paragraph>“Guideline,” or “rule of thumb,” is a more accurate description. Each of these terms implies a directive that is not always to be followed. Even these terms, however, ordinarily imply a precise rule. The first item listed above is hardly precise, even though it does limit the possible forms of a menu tree. Accordingly, I will refer to these as functional “considerations.”</p>

<h4>b. Impact of functional considerations on form of the menu tree.</h4>

<p class=Paragraph>The parties dispute the impact of the eight functional considerations (listed above) on the freedom of expression in forming a menu tree. For the following reasons I conclude that the Lotus 1-2-3 menu tree is just one of a great variety of possible expressions that are consistent with the functional considerations listed above and the specific set of executable operations used in Lotus 1-2-3.</p>

<p class=Paragraph>First, none of the proffered functional considerations is overriding or dictates any specific result. Each may be violated. Most are violated at one or more points within the Lotus 1-2-3 menu tree. Indeed, the considerations are often competing and must be traded off against each other. <i>See, e.g., </i>Gottheil Dep’n, IX:11 at 143-64; Olson Dep’n, III:32 at 117-18. No functional considerations are offered for guiding the determination of how to trade off competing concerns. Borland provided no credible evidence explaining how functional considerations could completely control formation of the menu tree.</p>

<p class=Paragraph>Second, the “quality” of the menu tree depends on the peculiarities (<i>i.e.</i>, the particular tastes) of the individual using the program. <i>See, e.g.,</i> Bosworth Dep’n, I:1 at 389-90. For this to be true, there must be a <span class=SourcePN>&lt;30 USPQ2d 1088&gt;</span><A name="30USPQ2d1088"></A> variety of possible menu trees for the user to choose from. In this regard, Borland programs offer a “menu builder” that enables users to alter, customize, and create menu trees. If functional considerations restricted the possible expression of the menu tree to a limited number of possibilities, there would be little or no need for a user to modify it.</p>

<p class=Paragraph>Third, even Borland’s experts acknowledge that, given all of the various functional considerations, at least a limited range of choices remains for individual menu commands. <i>See </i>Liddle Dep’n, II:27 at 121; Olson Dec’n, V:13 at Para.35. Thus “Copy” could be called “Replicate,” “Duplicate,” “Reproduce,” “Repeat,” “Ditto,” etc. “Range” could be “Block,” “Scope,” “Extent,” “Cells,” etc. Although some experts contend that certain words and menu structure are preferable to others, these same experts contend that the words Lotus selected did not matter for 1-2-3’s success. <i>See </i>Liddle Dec’n, V:11, Para.55; Olson Dec’n, V:13, Paragraphs36, 38. In any event, even if there were as few as two acceptable words for each menu command (given the other <span class=SourcePN>&lt;831 F.Supp. 214&gt;</span><A name="831F.Supp.214"></A> functional considerations), there would be 2 raised to the 469th power possible menu trees (an astronomical number) having precisely the same menu structure as the 1-2-3 menu tree, but with variations in menu command names. <i>See </i>Emery Dec’n, V:3, Para.85. Even if only half of the menu commands had more than one possible name (given the other functional considerations), there are over 2<sup>234</sup> possible menu trees having the same menu structure.</p>

<p class=Paragraph>In listing these examples, I do not mean to suggest that the alternatives for menu command names are so few, nor to imply that every synonym for a command word is suitable in view of the other functional considerations. Rather, I merely note the breadth of possible menu trees that may be achieved in this manner as a factor bearing upon whether implementation of the idea, system, process, procedure, or method underlying the Lotus 1-2-3 menu tree is capable of a wide variety of expression.</p>

<p class=Paragraph>Also, in presenting this analysis, I do not imply that counting possible variations in individual words is decisive of the breadth of possible expressions for literary works in general. It would not necessarily be significant, for example, to determine how many ways instructions for a simple game can be expressed solely by examining possible alternatives for individual words. Nevertheless, variations of the words in the menu tree represent a material consideration in the context of this case because of (1) the nature of the menu tree, which unlike an English sentence, permits substitution of individual words without changing the meaning of the menu tree, (2) the size of the menu tree, and (3) the structure of the menu tree.</p>

<p class=Paragraph>If the designer of a menu tree chooses not to copy the structure of Lotus 1-2-3, the designer’s freedom of expression and range of possible expressions for the menu tree expand dramatically. <i>See </i>Emery Dec’n, V:3, Para.84. Nothing in the materials before me supports an inference that functional considerations alone control the structure of the menu tree. Indeed, Borland’s experts implicitly acknowledge alternatives for the structure of the 1-2-3 menu tree. <i>See </i>Liddle Dec’n, V:11, Para.56; Olson Dec’n, V:13, Para.38.</p>

<p class=Paragraph>Finally, a number of other spreadsheet programs use vastly different menu trees. The existence of vastly different menu trees in other commercial programs supports the conclusion that the Lotus 1-2-3 menu tree is but one of many possible forms for a menu tree.</p>

<p class=Paragraph>Borland contends, however, that the differences in menu trees between programs such as Lotus 1-2-3 and Excel are due to differences in the programs’ functionality. That is, Borland argues that because the executable operations (leaves of the tree) are different and the visual displays are different (<i>e.g.,</i> pop-up menus vs. text on a single line), the menu trees are different. Borland contends that, as a result, the existence of other commercial programs with menu trees vastly different from the 1-2-3 menu tree (and each other) is not probative of the degree of freedom of expression that exists in formulating the 1-2-3 menu tree.</p>

<p class=Paragraph>I reject Borland’s contentions for the following reasons. Although differences in program functionality may explain some differences between menu trees, the differences in functionality cannot explain the breadth of differences among menu trees used in the various programs. For example, functional considerations do not explain why the “File” menu command is left-most in the Excel menu tree and fifth from the left in the 1-2-3 menu tree. Borland does not suggest or offer any evidence explaining how the (unspecified) differences in functionality among 1-2-3, Excel, and Quattro’s native mode affect placement of the “File” command within the first menu. Similarly, 1-2-3 places the copy and move command in the first level of the menu tree. In Excel they are in the second level.</p>

<p class=Paragraph>The differences among menu trees in the various programs submitted are so large that they are, in a practical sense if not literally, incapable of enumeration. The broad scope of these differences cannot be explained in terms of differences in functionality. Indeed, <span class=SourcePN>&lt;30 USPQ2d 1089&gt;</span><A name="30USPQ2d1089"></A> Borland offers no evidence or argument providing a reasoned explanation (as opposed to an unsupported assertion) of how the magnitude of differences could be explained by any <span class=SourcePN>&lt;831 F.Supp. 215&gt;</span><A name="831F.Supp.215"></A> differences in functionality. I conclude that many of the differences are due to different choices about how to express to the user the available user choices about all the particular operations that the program can perform.</p>

<p class=Paragraph>In argument, Borland placed primary emphasis on an expert’s assertion that the set of possible menu command names is “not large.” <i>See </i>Olson Dep’n, III:32 at 54-59. As a preliminary matter, I find that this testimony is entitled to little, if any, weight. Nothing purports to explain how the expert reached this conclusion. In fact, this expert admits that she has never attempted to determine how large the set is. An expert’s unexplained and unsupported assertion, even if received into evidence, is scant basis for reaching a reasoned finding.</p>

<p class=Paragraph>In addition, the testimony is unclear whether the expert meant that there was a small set of choices for individual command names, or the set of all menu command names. In an earlier declaration this expert conceded that there is a “very narrow range” of suitable words for individual commands. <i>See </i>Olson Dec’n, V:13 at Paragraphs35-36. As observed above, even if (given all the functional considerations) only half the commands have only one alternative label, the possible number of menu trees that differ in detail remains very high. Consequently, what this expert meant by “not a large set” may be entirely consistent with a determination that the number of possible ways of expressing the menu tree is without limitations that are material to the separation between idea or function and expression.</p>

<p class=Paragraph>Finally, even assuming that the alternatives for menu command names were few, when I take into account as well the options available for structure, I find that the number of possible choices again expands dramatically. Thus, what Borland copied from 1-2-3 was not limited to aspects dictated by functional considerations. Rather, Borland copied the entire menu tree, much of which was the free expression of the creators of Lotus 1-2-3.</p>

<h4>c. Conclusion.</h4>

<p class=Paragraph>As Borland practically conceded in closing argument, application of functional considerations does not restrict the expression of the menu tree to essentially only one form. (<i>See </i>Docket 333 at 3-52.) Further, I find that although functional considerations may have some effect on the design of a menu tree, they do not impose any practical limitation on the possible forms of expression to a number far enough short of infinity that any way of expressing the number in English words has come into common usage. The set of executable operations in Lotus 1-2-3 is large and the possible structural variations are enormous. The menu tree is capable of a very wide variety of expressions.</p>

<p class=Paragraph>Borland has not argued or provided any evidence that any specific aspect of menu structure or command names, short of the entire menu tree, is dictated solely or influenced mainly by functional considerations. Moreover, Borland has used a virtually identical copy of the 1-2-3 menu tree. Accordingly, this case on its facts does not present any issue that might arise on a finding of copying of something short of virtually the entire menu tree.</p>

<h3>2. Originality.</h3>

<p class=Paragraph>In its closing argument, Borland asserted that, because of functional considerations, creation of the menu tree did not require sufficient originality to justify protection under copyright law.</p>

<h4>a. Originality doctrine.</h4>

<p class=Paragraph>The Supreme Court recently addressed the requirement of originality in <i>Feist Publications, Inc.</i> <i>v. Rural Tel. Serv. Co.</i>, 111 S. Ct. 1282 [<A HREF="http://iplaw.bna.com/iplw/display/link_res.adp?lt=email&fname=uspq2d_18_1275" title="Link to case for BNA subscribers">18 USPQ2d 1275</A>] (1991). The Opinion for the Court in <i>Feist </i>observed that the requirement that a work be “original” derives from the Constitution. The Court described the originality requirement as follows.</p>

<p class=BlockQuote>The <i>sine qua non </i>of copyright is originality. To qualify for copyright protection, a work must be original to the author. Original, as the term is used in copyright, means only that the work was independently created by the author (as opposed to copied from other works), and that it possesses at least some minimal degree of creativity. To be sure, the requisite level <span class=SourcePN>&lt;831 F.Supp. 216&gt;</span><A name="831F.Supp.216"></A> of creativity is extremely low; even a slight amount will suffice. The vast majority of works make the grade quite easily, as they possess some creative spark, no matter how crude, humble or obvious it might be.</p>

<p class=Paragraph><i>Id. </i>at 1287 (internal quotation marks and citations omitted).</p>

<p class=Paragraph>The Court held that copying from the white pages of a telephone book was permissible. To reach this conclusion, the Court first confirmed the firmly established principle that facts (<i>e.g.,</i> the names, towns and telephone numbers in the white pages) are not copyrightable. The Court also confirmed that “even a directory that contains absolutely no protectable written expression, only <span class=SourcePN>&lt;30 USPQ2d 1090&gt;</span><A name="30USPQ2d1090"></A> facts, meets the constitutional minimum for copyright protection if it features an original selection or arrangement.” <i>Id. </i>at 1289. In this circumstance, “the copyright is limited to the particular selection or arrangement.” <i>Id.</i> at 1290.</p>

<p class=Paragraph>Applying these two basic principles, the Court determined that the selection and arrangement of facts in the plaintiff’s telephone book, <i>i.e.,</i>selection of all people who applied for phone service and arrangement in alphabetical order, was “devoid of even the slightest trace of creativity.” <i>Id.</i> at 1296.</p>

<p class=BlockQuote>[O]riginality is not a stringent standard; it does not require that facts be presented in an innovative and surprising way. It is equally true, however, that the selection or arrangement of facts cannot be so mechanical or routine as to require no creativity whatsoever.</p>

<p class=Paragraph><i>Id. </i>Indeed, the selection of all people and placement in alphabetical order was not at all original to the plaintiff—phone books had been arranged in that fashion for years. Plaintiff’s white pages were nothing but a “garden-variety” phone book. <i>Id.</i></p>

<h4>b. Originality in this case.</h4>

<p class=Paragraph>Relying on <i>Feist, </i>Borland contends that the eight “rules” regarding functionality listed above demonstrate that the form of the menu tree (including menu command names and structure) is not original. For the following reasons, I find that the menu tree is “original.”</p>

<p class=Paragraph>As explained above, the menu tree of Lotus 1-2-3 may be viewed as an arrangement of the executable operations as “leaves” of the “menu tree,” with internal commands (“branches”) leading through the structure to the “leaves.” Altogether, the tree contains 469 labels to explain the arrangement. This text and arrangement presents the set of executable operations to the program user. Thus, the specific operations could be viewed as (uncopyrightable) facts and the menu tree as an arrangement (with textual labels) of the facts. Even viewed in this light, most favorably to Borland, the menu tree easily satisfies the originality requirement discussed in <i>Feist.</i></p>

<p class=Paragraph>The functional considerations Borland propounds are not at all comparable to application of a rule of alphabetical ordering of executable operations.</p>

<p class=Paragraph>Borland’s “rules” are violated with regularity in the 1-2-3 menu tree. In contrast, the rule of alphabetical ordering was not violated in the <i>Feist</i> white pages.</p>

<p class=Paragraph>Also, the functional considerations listed above were not “an age old practice, firmly rooted in tradition and common place.” <i>Feist,</i> 111 S. Ct. at 1297.</p>

<p class=Paragraph>Moreover, (except in a few places where rules of alphabetical ordering differ) one who is given the names, addresses and numbers in a phone book, can generate the alphabetical ordering by routine and mechanical application of rules, with only one possible outcome. In contrast, the text for the menu commands and the menu structure itself are not dictated by mechanical application of the functional considerations. As noted above, a wide variety of menu trees is possible.</p>

<p class=Paragraph>In sum, the 1-2-3 menu tree “make[s] the grade quite easily, as it possess [es] some creative spark.&nbsp;.&nbsp;.&nbsp;.” <i>Feist</i>, 111 S. Ct. at 1287.</p>

<p class=Paragraph>Borland nevertheless contends that, because functional considerations played a role in formulating the 1-2-3 menu tree, the menu tree is not copyrightable. Borland’s <span class=SourcePN>&lt;831 F.Supp. 217&gt;</span><A name="831F.Supp.217"></A> argument is susceptible of two interpretations, both lacking merit.</p>

<p class=Paragraph>First, one may interpret this argument as a contention that the functional considerations so permeate formulation of the menu tree that the menu tree is not separable from the “idea” of the program. This form of argument has nothing to do with the amount of creativity or originality involved. Derivation of a scientific formula may require a great deal of creativity and produce an original result. If the formula fails the copyrightability test, it is because the formula is not expressive—independently of creativity or originality. Casting the argument in terms of originality doctrine rather than separability does nothing to assist resolution of the issues in this case, and may lead to confusion. In any event, to the extent Borland raises the same separability argument that it has raised before, but dressed now in terms of originality, that argument was previously rejected by the court for good reason, and is now rejected again.</p>

<p class=Paragraph>Alternatively, Borland may be understood as contending that any work whose form is restricted to any material extent by functional considerations is not original. Without more, this contention is invalid on its face. Any original literary work is formulated according to functional considerations imposed by language, a desire for clarity, and a desire to express the ideas conveyed. As one of Borland’s experts concedes, the first functional consideration (conveying the nature of executable operations) is not materially different from a functional consideration for selection of words in any English writing. <i>See </i>Olson Dep’n, III:32 at 54. Accordingly, this type of “functional consideration” can remove a writing from copyright protection only if it restricts the forms of expression <span class=SourcePN>&lt;30 USPQ2d 1091&gt;</span><A name="30USPQ2d1091"></A> (that are separable from the idea or function of the work) to a limited number. Thus, cases referring to functional considerations and decided under originality doctrine, including those cited by Borland, uniformly refer to limits on the number of forms of expression given functional considerations.</p>

<p class=Paragraph><i>See Victor Lalli Enter., Inc.</i> <i>v</i>. <i>Big Red Apple, Inc.</i>, 936 F.2d 671, 673 [<A HREF="http://iplaw.bna.com/iplw/display/link_res.adp?lt=email&fname=uspq2d_19_1226" title="Link to case for BNA subscribers">19 USPQ2d 1226</A>] (2d Cir. 1991) (“purely functional grids that offer no opportunity for variation”); <i>Sinai</i> <i>v</i>.<i>California Bureau of Automotive Repair</i>, <A HREF="http://iplaw.bna.com/iplw/display/link_res.adp?lt=email&fname=uspq2d_25_1809" title="Link to case for BNA subscribers">25 U.S.P.Q.2d 1809</A> (N.D. Cal. 1992) (“limited number of ways” to arrange information in chart); <i>New Haven Copper Co. v</i>. <i>Eveready Mach. Co.</i>, <A HREF="http://iplaw.bna.com/iplw/display/link_res.adp?lt=email&fname=uspq_229_838" title="Link to case for BNA subscribers">229 U.S.P.Q. 838</A> (D. Conn. 1986) (column headings “dictated by functional considerations”); <i>Merritt Forbes &amp; Co. v</i>. <i>Newman Inv. Sec., Inc.</i>, 604 F. Supp. 943, 951-52 [<A HREF="http://iplaw.bna.com/iplw/display/link_res.adp?lt=email&fname=uspq_225_1179" title="Link to case for BNA subscribers">225 USPQ 1179</A>] (S.D.N.Y. 1985) (no originality if “form of expression is dictated solely by functional considerations”; determining that fact issue exists over whether concept is “capable of varied expressions”); <i>Decorative Aides Corp.</i> <i>v</i>.<i>Staple Sewing Aides Corp.</i>, 497 F.Supp. 154, 157 [<A HREF="http://iplaw.bna.com/iplw/display/link_res.adp?lt=email&fname=uspq_210_657" title="Link to case for BNA subscribers">210 USPQ 657</A>] (S.D.N.Y. 1980) (what was similar was “dictated by functional considerations”), <i>aff’d without op.</i>, 657 F.2d 262 (2d Cir. 1981) <i>Cf. Feist,</i> 111 S. Ct. at 1296 (routine and mechanical application of single rule).</p>

<p class=Paragraph>Thus, Borland’s argument fails because, as above, a wide variety of expression is possible for the Lotus 1-2-3 menu tree.</p>

<h2>C. Value of Expert Testimony.</h2>

<p class=Paragraph>In reaching the conclusions above, I have read and weighed the expert testimony offered by the parties. For the following reasons, however, much of this testimony has little weight in relation to the issues of law and fact that are decisive of the outcome in this case.</p>

<p class=Paragraph>First, most of the testimony expresses conclusions, without any reasoned explanation of the basis for the conclusions. Second, much of the testimony uses terms such as “system” or “a large number” that the experts do not define. As factfinder, I choose not to abandon my factfinding responsibility by accepting an expert’s proposed unexplained choice. This is my usual practice, and for even stronger reasons I proceed in this way when the expert’s testimony uses terms specially defined by the expert to have meanings that incorporate into the terminology substantive choices that have important policy implications, without examining and explaining reasons for the policy choices and whether they <span class=SourcePN>&lt;831 F.Supp. 218&gt;</span><A name="831F.Supp.218"></A> are consistent with applicable statutes and precedents.</p>

<p class=Paragraph>Finally, much of the testimony is based on explicit or implicit assumptions about copyright law that are incorrect. For example, one expert testified that she was unsure of whether design of a menu tree is creative. In defining creativity, however, the expert explained that creativity required some “inventive leap.” Olson Dec’n, III:32 at 124-35. Of course, this type of creativity—the inventive leap or new idea—is not required for copyrightable expression. <i>See Feist,</i> 111 S. Ct. at 1296 (novelty or innovation not required). Expression is copyrightable, even when it is a new expression (<i>e.g.,</i> a new novel about young love) of an old idea (<i>i.e.,</i> boy meets girl).</p>

<h2>D. Conclusion.</h2>

<p class=Paragraph>In sum, I conclude that each of the Borland emulation interfaces contains a virtually identical copy of the 1-2-3 menu tree and that the 1-2-3 menu tree is capable of a wide variety of expression.</p>

<h1>III. Affirmative Defenses for Phase I.</h1>

<h2>A. Laches</h2>

<p class=Paragraph>Borland has the burden of proving laches. <i>Costello v. United States, </i>365 U.S. 265, 282 (1961). A defense of laches has been established if the defendant proves that (1) the plaintiff inexcusably or unreasonably delayed in bringing an infringement action, and (2) defendant was prejudiced by this delay.<i> See id. See also </i>3 Nimmer on Copyright Section 12.06.</p>

<p class=Paragraph>The chronology of the principal events bearing upon Borland’s defense of laches commences in January 1987, when Lotus filed suit in the <i>Paperback</i>case. Borland was developing Quattro at the time. Before including the 1-2-3 emulation interface in Quattro, Borland secured a legal opinion that the program did not infringe Lotus’s copyright. In late September 1987, Borland announced Quattro, Borland’s first spreadsheet product. In November, Borland shipped the Quattro product. Quattro was advertised widely, one advertisement appearing in a November 1987 issue of “Lotus Magazine.”</p>

<p class=Paragraph>In early 1988, the Quattro product was discussed at a high-level Lotus meeting. The evidence concerning this meeting supports <span class=SourcePN>&lt;30 USPQ2d 1092&gt;</span><A name="30USPQ2d1092"></A> an inference that certain Lotus executives discussed the possibility that Borland would change Quattro if Lotus threatened suit. The evidence does not prove, however, that Lotus delayed filing suit or kept silent on the issue of infringement <i>for this reason </i>. I find that Lotus may have discussed the possibility that Borland would change its product, but that this was not a factor in Lotus’s decision not to file suit in 1988.</p>

<p class=Paragraph>Some time after the meeting, Lotus decided not to file suit against Borland then. In addition, Lotus adopted a policy of not commenting on possible infringement by, or legal action against, Borland.</p>

<p class=Paragraph>In September 1988, less than one year after Borland shipped Quattro, Borland acquired the “Surpass” spreadsheet technology (from “Surpass Software Systems”) for approximately $2.4 million. This included a software program that had been called “Surpass.” The Surpass program’s only menu tree was a copy of the 1-2-3 menu tree. After acquiring Surpass, Borland removed the Surpass product from the market. Borland then re-engineered Surpass to become the Quattro Pro product, having a 1-2-3 compatible menu tree as just one of the possible menu trees available. Quattro Pro version 1.0 was released in November 1989.</p>

<p class=Paragraph>Near the end of June 1990, this court handed down its decision in the <i>Paperback </i>case. The day after the decision was released, Borland filed an action in California seeking a declaration of noninfringement. On July 2, 1990, Lotus filed the original complaint in the present action.</p>

<h4>1. Delay.</h4>

<p class=Paragraph>The period between Borland’s release of Quattro and Lotus’s filing of the instant action was approximately 2 1/2 years. This amount of time, standing alone, does not dictate a finding that the delay was unreasonable.</p>

<p class=Paragraph><span class=SourcePN>&lt;831 F.Supp. 219&gt;</span><A name="831F.Supp.219"></A> <i> Cf. Roulo v. Russ Berrie &amp; Co.,</i> 886 F.2d 931, 942 [<A HREF="http://iplaw.bna.com/iplw/display/link_res.adp?lt=email&fname=uspq2d_12_1423" title="Link to case for BNA subscribers">12 USPQ2d 1423</A>] (7th Cir. 1989) (“A two year delay in filing an action following knowledge of the infringement has rarely been held sufficient to constitute laches.”), <i>cert. denied, </i>493 U.S. 1075 (1990); <i>Hoste v. Radio Corp. of America,</i> 654 F.2d 11 [<A HREF="http://iplaw.bna.com/iplw/display/link_res.adp?lt=email&fname=uspq_212_153" title="Link to case for BNA subscribers">212 USPQ 153</A>] (6th Cir. 1981) (per curiam) (error to grant summary judgment based on laches for suit filed after 13 year delay); <i>Boothroyd Dewhurst, Inc. v. Poli</i>, 783 F. Supp. 670, 680 [<A HREF="http://iplaw.bna.com/iplw/display/link_res.adp?lt=email&fname=uspq2d_20_1881" title="Link to case for BNA subscribers">20 USPQ2d 1881</A>] (D. Mass. 1991) (four year delay may not constitute laches).</p>

<p class=Paragraph>Whether this amount of delay was unreasonable or inexcusable depends on the motives for delay. Thus, Judge Learned Hand observed that</p>

<p class=Paragraph>it is inequitable for the owner of a copyright, with full notice of an intended infringement, to stand inactive while the proposed infringer spends large sums of money in its exploitation, and to intervene only when his speculation has proved a success. Delay under such circumstances allows the owner to speculate without risk with the other’s money; he cannot possibly lose, and he may win.</p>

<p class=Paragraph><i>Haas v. Feist,</i> 234 F. 105, 108 (S.D.N.Y. 1916). On the other hand, delay used to evaluate and prepare a complicated claim may be reasonable. <i>See, e.g.</i>, <i>Paperback,</i> 740 F.Supp. at 82. Similarly, delay to determine whether the scope of proposed infringement will justify the cost of litigation may be permissible. <i>See, e.g.</i>, <i>Boothroyd Dewhurst,</i> 783 F.Supp. at 680-81. In the circumstances of the present case, I find that Lotus’s delay in filing suit was reasonable and excusable.</p>

<p class=Paragraph>First, I reject Borland’s contention that Lotus’s delay in bringing suit is of the kind addressed in <i>Haas</i>, <i>i.e.,</i> in order to speculate with Borland’s money. Borland relies primarily on the failure of Lotus to file an action in the early part of 1988. Borland contends that Lotus then knew enough about Borland’s plans that Lotus should have notified Borland immediately if Lotus intended to claim infringement and that Lotus did not do so because Lotus was afraid that Borland would change Borland’s product. Borland contends, in other words, that Lotus waited to file suit in an effort to trap Borland into expending large sums of money on Borland’s spreadsheet products and, later, to reap the benefits of Borland’s investment.</p>

<p class=Paragraph>I find, however, that the evidence Borland presented does not support Borland’s contentions. At the time of the 1988 meeting, Borland had already developed, advertised, and shipped Quattro. The possibility that Borland would adjust Quattro to remove the copy of the Lotus 1-2-3 menu tree was marginal in significance at the time of this meeting. For this reason, reinforced by the findings stated above, I do not find the evidence sufficient to persuade me, as factfinder, to draw the inference that Lotus waited to sue hoping that its <i>competitor’s </i>product would succeed and enable Lotus to reap enhanced damages.</p>

<p class=Paragraph><i>See Russell v. Price</i>, 612 F.2d 1123, 1126 [<A HREF="http://iplaw.bna.com/iplw/display/link_res.adp?lt=email&fname=uspq_205_206" title="Link to case for BNA subscribers">205 USPQ 206</A>] (9th Cir. 1979) (conclusion that plaintiff was not speculating on defendant’s success supported by fact that plaintiff was also seeking to exploit the copyrighted material), <i>cert. denied sub </i><span class=SourcePN>&lt;30 USPQ2d 1093&gt;</span><A name="30USPQ2d1093"></A> <i>nom.</i>, <i>Debrin v. Russell</i>, 446 U.S. 952 (1980).</p>

<p class=Paragraph>I find that Lotus delayed bringing suit for the purpose of awaiting resolution of the <i>Paperback </i>and <i>Mosaic </i>cases. Throughout 1988, Lotus was involved in extensive litigation in <i>Paperback </i>and <i>Mosaic</i>. This litigation was hotly contested. If Lotus had lost the <i>Paperback </i>case, Lotus’s claims against Borland would have been difficult to maintain. Thus, by waiting to file suit, Lotus avoided expensive duplicative litigation all of which might have been unsuccessful if Lotus lost in <i>Paperback. </i>This avoided a risk of needlessly wasting court and party resources. Once the <i>Paperback</i>case was resolved by the trial court, Lotus filed suit against Borland almost immediately. I cannot say that this was unreasonable.</p>

<p class=Paragraph>Borland contends, nevertheless, that Lotus’s delay was unreasonable in part because Lotus kept silent about its belief that Borland’s product infringed. Lotus responds that it was satisfied that Borland knew of the infringement claims because of (1) Phillipe Kahn’s (Borland’s chairman’s) strong public reaction condemning Lotus for filing the <i>Paperback </i><span class=SourcePN>&lt;831 F.Supp. 220&gt;</span><A name="831F.Supp.220"></A> case, and (2) a public statement Lotus issued before Quattro was shipped, that appeared in the May 26, 1987 issue of PC Magazine (Exh. 28 at 162-63). In the public statement, Lotus represented that it did not claim copyright over the ideas of a two-line moving cursor interface or context sensitive help. Lotus then characterized its suit against Paperback and Mosaic as protecting against companies that copied “all of the ways in which 1-2-3 communicates to the user, including its menu structure and sequence, word selection, and macro language design.&nbsp;.&nbsp;.&nbsp;.”</p>

<p class=Paragraph>I find that Lotus reasonably believed that Borland was aware of Lotus’s potential claims against Quattro and Quattro Pro. Borland “was far too sophisticated to need being led by the hand.” <i>Famous Music Corp. v. Bay State Harness Horse Racing &amp; Breeding Assoc., Inc., </i>554 F.2d 1213, 1215 [<A HREF="http://iplaw.bna.com/iplw/display/link_res.adp?lt=email&fname=uspq_194_177" title="Link to case for BNA subscribers">194 USPQ 177</A>] (1st Cir. 1977) (rejecting estoppel defense). In light of this, I cannot say that Lotus’s decision not to comment on the infringing nature of Quattro or Quattro Pro makes Lotus’s delay in this case unreasonable or inexcusable.</p>

<p class=Paragraph>In weighing equities, some courts decline to permit a laches defense by a “deliberate pirate,” <i>Haas,</i> 234 F. at 108, or less harshly stated, a “deliberate infringer.”</p>

<p class=Paragraph><i>See </i>3 Nimmer on Copyrights, Section 12.06 at 12-107 (delay “may not be a bar against one who knew of plaintiff’s asserted rights, or as against a deliberate infringer”) (footnotes omitted).</p>

<p class=Paragraph>I find that Borland (1) knew of Lotus’s copyright, (2) knew that Lotus was acting to protect that copyright, and (3) deliberately introduced a virtually identical copy of the Lotus 1-2-3 menu tree into its 1-2-3 emulation interfaces.</p>

<p class=Paragraph>The fact that Borland did secure a noninfringement opinion from a prestigious law firm is relevant, of course. Nevertheless, Lotus is not in any way accountable for that opinion. Indeed, Borland offers no evidence that Borland gave any notice to Lotus of Borland’s seeking legal advice or of the substance of that advice. It is a rather curious twist of argument to suggest that a copyright owner has a duty of notice to the infringer when the infringer has enough concern about its own actions that it seeks a legal opinion privately but refrains from giving any kind of notice to the copyright owner.</p>

<p class=Paragraph>Borland contends that the <i>Paperback </i>suit could not constitute notice that Lotus was enforcing its copyright because the issues in <i>Paperback</i>and this case are not identical. The fact that the issues are not identical, however, is far from decisive. More to the point is the fact that Borland was aware of Lotus’s assertion of copyright protection for the 1-2-3 program and in particular for the form of its menu tree.</p>

<p class=Paragraph>Borland next argues that Lotus had not sufficiently formulated its precise contentions of what aspects of Borland’s products infringe Lotus’s copyright until May of 1992&nbsp;– almost two years into this case. Again, this has little to do with the fact that Borland was aware of Lotus’s assertion of copyright protection for Lotus 1-2-3 and in particular for the form of its menu tree.</p>

<h3>2. Prejudice.</h3>

<p class=Paragraph>The defense of laches requires that defendant suffer prejudice. Typical forms of prejudice include: death or unavailability of an important witness, dulling of memories, loss of relevant records, and continuing investments and outlays by the alleged infringer in connection with the operation of its business. <i>See Eisenman Chemical Co. v.</i> <i>NL Indus., Inc.,</i> 595 F. Supp. 141, 147 [<A HREF="http://iplaw.bna.com/iplw/display/link_res.adp?lt=email&fname=uspq_224_871" title="Link to case for BNA subscribers">224 USPQ 871</A>] (D. Nev. 1984). Borland argues only the last form of prejudice. To demonstrate prejudice, Borland points to marketing costs and acquisition of the Surpass technology.</p>

<p class=Paragraph>To constitute prejudice, however, these expenses must have been incurred <i>as a result </i>of Lotus’s delay in bringing suit. Where an infringer was aware of a plaintiff’s copyright, as Borland indisputably was, courts <span class=SourcePN>&lt;30 USPQ2d 1094&gt;</span><A name="30USPQ2d1094"></A> have phrased this point as a requirement that the actions be taken in reliance on the plaintiff’s delay in bringing suit.</p>

<p class=Paragraph><i>See Russell</i>, 612 F.2d at 1126; <i>In Design v. Lauren Knitwear Corp.</i>, 782 F. Supp. 824, 831 [<A HREF="http://iplaw.bna.com/iplw/display/link_res.adp?lt=email&fname=uspq2d_22_1341" title="Link to case for BNA subscribers">22 USPQ2d 1341</A>] (S.D.N.Y. 1991); <i>Steinberg v. Columbia </i><span class=SourcePN>&lt;831 F.Supp. 221&gt;</span><A name="831F.Supp.221"></A> <i> Pictures Indus., Inc.</i>,663 F.Supp. 706, 716 [<A HREF="http://iplaw.bna.com/iplw/display/link_res.adp?lt=email&fname=uspq2d_3_1593" title="Link to case for BNA subscribers">3 USPQ2d 1593</A>] (S.D.N.Y. 1987).</p>

<p class=Paragraph>For the following reasons, I conclude that Borland has not proved that it took any action in reliance on Lotus’s delay in bringing suit.</p>

<p class=Paragraph>First, I find that Borland would have invested in and entered the spreadsheet market whether or not Lotus delayed in bringing suit. Phillipe Kahn testified that the decision to include the 1-2-3 emulation interface in Quattro was made not long before the product shipped. (I:14 at 362). Of course, this initial decision to include the 1-2-3 emulation interface was made before Lotus could have objected.</p>

<p class=Paragraph>The Surpass technology, acquired in 1988, was used to form the basis for Quattro Pro. This was less than one year after Borland shipped Quattro. Borland presented no evidence that it would not have acquired Surpass had Lotus taken action earlier. Moreover, Quattro already had a 1-2-3 emulation interface. It would not be reasonable to infer that other aspects of Surpass than its copy of the Lotus 1-2-3 menu tree had no influence on Borland’s decision. I find that Borland has not proved that it acquired the Surpass technology in reliance on Lotus’s delay in bringing suit.</p>

<p class=Paragraph>I observe also that Borland filed a declaratory judgment action immediately after the decision in the <i>Paperback </i>case. Borland seeks to explain the timing of the filing of the declaratory judgment action by presenting evidence that Borland was responding to recent conflicting reports that Lotus would file suit against Borland. Even if I credited this self-serving assertion, unsupported by any objective evidence, however, I would not infer that Borland had ever relied on Lotus’s failure to assert infringement to conclude that Lotus would never file suit. Moreover, a senior Borland official averred that the Borland Board of Directors had been informed before the decision in the <i>Paperback </i>case that Lotus intended to sue Borland if Lotus prevailed in <i>Paperback </i>. (Leyton Dec’n VI:10, Para.5.) Nevertheless Borland, like Lotus, awaited the outcome of the <i>Paperback </i>case. Significantly, when Borland filed, it sought a declaration of noninfringement, but omitted any specific request for a declaration of unenforceability due to laches or estoppel.</p>

<p class=Paragraph>Based on the evidence before me, I find that Borland developed and marketed Quattro and Quattro Pro in reliance on (1) the noninfringement opinion, and (2) the hope that Lotus would lose the <i>Paperback</i>litigation. Further, I find that Borland has not proved that it took any actions in reliance on Lotus’s delay in bringing suit. Finally, I find that reliance, even if it had occurred, would have been unreasonable in the circumstances shown by the evidence in this case.</p>

<h2>B. Estoppel.</h2>

<p class=Paragraph>The parties apparently agree that, to establish a defense of estoppel, Borland must prove that Lotus engaged in (1) conduct that induced Borland to change its position in good faith, or (2) conduct on which a reasonable person would rely. <i>See Precious Metals Associates, Inc. v. Commodity Futures Trading Comm’n,</i> 620 F.2d 900, 908 (1st Cir. 1980). In view of this agreement, I need not and do not consider whether this interpretation of <i>Precious Metals </i>and other precedents is more generous to Borland’s estoppel claim than a more precise understanding of the precedents would be.</p>

<p class=Paragraph>To establish estoppel, Borland relies primarily on Lotus’s delay in bringing suit and Lotus’s failure to inform Borland of Lotus’s belief that the Borland products infringe. For the reasons explained in Section A above, I find that (1) Lotus did not intend that Borland infer from Lotus’s silence that copying of the menu tree was permissible, (2) Borland was aware of Lotus’s copyright, (3) Borland did not rely on the silence of Lotus to Borland’s detriment, and (4) any reliance by Borland in the circumstances of this case would have been unreasonable and unjustifiable.</p>

<p class=Paragraph>Borland also offers a collection of actions or statements by Lotus that Borland contends entitled Borland to infer that Lotus would not sue Borland for copyright infringement. Borland cites a January 1987 InfoWorld article, released before Lotus had any reason to know of Borland’s Quattro product. <span class=SourcePN>&lt;831 F.Supp. 222&gt;</span><A name="831F.Supp.222"></A> The article purports to quote a Lotus spokesman, Greg Jarboe:</p>

<p class=Paragraph>“Some folks have misinterpreted that what we have done is to copyright the spreadsheet or the two-line [command] interface, neither of which we are trying to do,” Jarboe said. The suit was targeted at two vendors who had “copied 99 percent” of a Lotus product, he said, adding that the company is considering issuing a position statement to clarify the limits of its copyright. <span class=SourcePN>&lt;30 USPQ2d 1095&gt;</span><A name="30USPQ2d1095"></A> InfoWorld, January 26, 1987. Even assuming this is an accurate quote, something Mr. Jarboe denies, I find that it would not be reasonable to launch a spreadsheet product in reliance on this statement. First, as Borland’s general counsel concedes, II:20 at 272, the statement does not purport to disavow filing suit against future products that infringe Lotus’s copyright in a manner different from the <i>Paperback </i>suit. A characterization of the <i>Paperback </i>case as involving “clones” is not reasonably interpreted as expressing an intention not to sue other infringers as well as makers of “clones.” Second, the article refers to an upcoming position statement (the PC Magazine statement quoted in Section III.A, above). Although Borland contends that none of Borland’s responsible representatives saw this position statement (a contention that I find questionable in light of their other activities), their failure to see and take account of that position statement, along with acting on the assumption that no such statement had been made, was unreasonable. Thus, to the extent Borland claims that it relied on the InfoWorld statement, it was unreasonable for Borland to rely on that statement while failing to take further steps to determine what Lotus’s position statement contained.</p>

<p class=Paragraph>Borland next cites the fact that Lotus Magazine published advertisements for Borland’s products. I find that it would not be reasonable for Borland to assume that the acceptance of the advertisement in Lotus Magazine showed that Lotus had determined that it would make no infringement claim against Borland. Following Borland’s line of reasoning, one would conclude that by allowing competitors to run advertisements in Lotus Magazine, Lotus Development Corporation agreed that the competitor’s advertising claims were correct (<i>e.g.,</i> that Borland’s products are superior, as the advertisements implied) and that Lotus wanted individuals to purchase from Lotus’s competitors. Merely stating this chain of inference is enough to expose its unreasonableness. I find, instead, that the fact that Lotus Magazine accepted the Borland advertisement indicated a policy of accepting advertisements—even from competitors. Moreover, on the evidence before me I cannot find, as factfinder, that the plaintiff in this case, Lotus Development Corporation, controlled the decision-making process about what appears in Lotus Magazine. Accordingly, it was not reasonable for Borland to infer that Lotus Development Corporation was making any statement concerning possible copyright infringement when Lotus Magazine accepted the advertisement.</p>

<p class=Paragraph>Borland next cites examples of occasions where Lotus personnel interacted with Borland personnel at trade shows and with respect to new products and services, without mentioning any belief that the Borland products infringe. Nothing in these materials suggests that the Lotus personnel involved had the actual or apparent authority, or even sufficient knowledge, to comment on whether or not Lotus believed that Borland infringed a copyright or whether Lotus intended to file an action in the future. Moreover, nothing in the record shows that the individuals involved actually said anything that would support an inference by Borland that copying of the menu tree was permissible. Accordingly, I find that Borland could not reasonably interpret these communications to mean that Lotus would not file suit.</p>

<p class=Paragraph>In sum, I find that both separately and taken as a whole, the events, conduct, and communications that Borland points to in an effort to bolster claims for estoppel fall far short of supporting estoppel.</p>

<h2>C. Conclusion.</h2>

<p class=Paragraph>For the reasons explained above, I find that Lotus’s claims in Phase I of the trial are not barred by laches or estoppel. In presenting its case on the affirmative defenses, Borland offers a number of proposed inferences <span class=SourcePN>&lt;831 F.Supp. 223&gt;</span><A name="831F.Supp.223"></A> that this court might draw, based loosely on evidence before the court. Although I have not explicitly referred to each of Borland’s individual contentions in this Opinion, I have examined all of the contentions and have found them without merit.</p>

<p class=Judge>August 12, 1993 As Amended August 19, 1993</p>

<p class=Paragraph>A nonjury trial was held in this action in two phases. Phase I was tried on February 1-3, 1993; Phase II, on March 31-April 2, 1993. An Opinion of June 30, 1993 (the “Phase I Opinion”) stated the court’s findings and conclusions on issues raised in Phase I of the trial. The present Opinion states my findings and conclusions for the Phase II trial.</p>

<h1>I. Introduction.</h1>

<p class=Paragraph>This Opinion assumes the reader’s familiarity with, and follows the terminology set forth in, the Phase I Opinion. Background information appears also in <i>Lotus Dev. Corp. </i>v. <i>Borland Int’l Inc., </i>799 F.Supp.203 (D. Mass. 1992) (“<i> Borland II”</i>, <i>Lotus Dev. Corp. </i>v. <i>Borland Int’l Inc., </i>788 F.Supp. 78 <span class=SourcePN>&lt;30 USPQ2d 1096&gt;</span><A name="30USPQ2d1096"></A> [<A HREF="http://iplaw.bna.com/iplw/display/link_res.adp?lt=email&fname=uspq2d_22_1641" title="Link to case for BNA subscribers">22 USPQ2d 1641</A>] (D. Mass. 1992) (“<i> Borland I”</i>), and <i>Lotus Dev. Corp.</i>v. <i>Paperback Software Int’l,</i> 740 F.Supp. 37 [<A HREF="http://iplaw.bna.com/iplw/display/link_res.adp?lt=email&fname=uspq2d_15_1577" title="Link to case for BNA subscribers">15 USPQ2d 1577</A>] (D. Mass. 1990) (“ <i>Paperback”</i>).</p>

<p class=Paragraph>As explained in the Phase I Opinion, the Phase I trial concerned issues of infringement raised in Lotus’s original complaint, <i>i.e.,</i>infringement by Borland’s copying of Lotus’s Menu tree into the 1-2-3 emulation interface of Borland’s Quattro and certain Quattro Pro spreadsheet programs.</p>

<p class=Paragraph>Phase II of the trial concerns the full range of liability issues, including affirmative defenses, with respect to Lotus’s supplemental complaint. The supplemental complaint alleges that Borland’s “Key Reader” infringes Lotus’s copyrights in its 1-2-3 programs.</p>

<h1>II. Does Key Reader Infringe?</h1>

<h2>A. What is Key Reader?</h2>

<p class=Paragraph>The Phase I Opinion and the court’s earlier Memorandum and Orders have focused on the 1-2-3 emulation interfaces in the Quattro and Quattro Pro programs. After executing the command that invokes the emulation interface in one of Borland’s products, the program uses copies of the Lotus menu tree for display to the user, interaction with the user (<i>i.e., </i>interpreting the keystrokes typed by the user), and running macros.</p>

<p class=Paragraph>The Key Reader is not a part of the emulation interface. The Key Reader feature may be turned on while the user continues to use another (<i>e.g.,</i>the Quattro) menu tree. When Key Reader has been turned on, the program continues to behave as it had before, with one exception. With Key Reader on, when the program encounters a slash key (“/”) in a macro, the program interprets everything that follows the slash key as though it were part of a macro written for use with Lotus 1-2-3. Thus with Key Reader on, the program uses Quattro Pro menus for display, interaction and macro execution, except when a “/” key is encountered in a macro. Then, the program runs macros as though they were written using the 1-2-3 menu tree.</p>

<p class=Paragraph>A more detailed explanation of 1-2-3 “macros” is essential to explaining Key Reader.</p>

<p class=Paragraph>Generally, a 1-2-3 macro consists of some text contained in a spreadsheet cell. When the macro is invoked, the program begins at the left end of the text and treats each character in the text as though the user had typed that character into the 1-2-3 program. For example, consider a macro that consists of the text “/wp”. When the macro is invoked, the program behaves precisely as though the user had typed into the regular interface a “/” (calling up the first menu) followed by “w” (selecting the “Worksheet” branch of the menu tree) followed by “p” (selecting the “Page” leaf; this executable operation inserts a page break into the spreadsheet).</p>

<p class=Paragraph>In writing a macro, the user may use special commands not found in the 1-2-3 menu tree. For example, the character “-” in a macro is interpreted as though the user struck the Enter key on the keyboard. Consider a macro consisting of the text “/rfc- - “. When invoked, this macro has the same effect as the user’s typing into the 1-2-3 interface “/”, “r”, “f”, “c”, followed by striking the Enter key twice. That is, the program follows the “Range” branch, then the “Format” branch, then selects the “Currency” leaf. When the “Currency” leaf has been selected, the program asks the user to specify the number of decimal places and the block of cells whose appearance is to be <span class=SourcePN>&lt;831 F.Supp. 227&gt;</span><A name="831F.Supp.227"></A> altered to that of monetary units. The first “- “ is equivalent to striking the Enter key; the program accepts the default number of decimal places (two). The program then asks for the range of cells. The second “- “ is equivalent to striking the Enter key a second time; the program accepts the default range (one cell).</p>

<p class=Paragraph>Other sequences of symbols in a Lotus macro have a special meaning. Of particular interest is “(?)”. When the program encounters this sequence of characters in a macro, the program pauses and waits for the user to strike keys appropriate for the menu tree. Thus, consider a Lotus macro consisting of the text “/rfc- - “. When invoked, this macro would follow the “r” command (“Range” from the first level of the Lotus menu tree), then the “f” command (“Format” in the Lotus menu tree). The program then encounters the “(?)” characters. Here, the program pauses and allows the user to input a menu command. The program will interpret what the user inputs as a choice from the Lotus 1-2-3 submenu corresponding to “Range” “Format”. Thus, the user might strike the “c” key (followed by Enter) to format a cell as currency. If the user strikes the Escape key instead of striking “c”, the program backs up the menu tree from the “Format” submenu to the “Range” submenu. The user may continue maneuvering up and down the Lotus 1-2-3 menu tree until striking the Enter key. when the user strikes the Enter key, the program returns to reading the text of the macro as though the user were continuing by striking the keys found in the remaining text of the macro. A macro consisting only of “/(?)” permits a user to select any executable operation by typing keys precisely as though the user were using one of <span class=SourcePN>&lt;30 USPQ2d 1097&gt;</span><A name="30USPQ2d1097"></A> Borland’s emulation interfaces, but without display of the menus.</p>

<p class=Paragraph>Lotus 1-2-3 macros may also contain more advanced commands. Thus, a macro may contain text such as “(if&nbsp;.&nbsp;.&nbsp;.)” or “(let&nbsp;.&nbsp;.&nbsp;.)”. In these strings of characters, the ellipses refer to additional text or “arguments” the user would provide. When the program encounters an advanced command such as this, the program follows whatever procedures that command calls for. For example, the text “(blank Al. . G45)” would cause the program to erase each of the cells from “A1” (first column and first row). “if”, “let”, and “blank” are all labels in the Lotus 1-2-3 macro language that do not appear in the 1-2-3 menu tree.</p>

<p class=Paragraph>In sum, when Key Reader is on and a slash key is encountered in a macro, the program follows the text of the macro as though the characters were being typed during the program’s use of a copy of the 1-2-3 menu tree (and with some other means for interpreting the various special Lotus 1-2-3 macro language commands). When Key Reader is off, or no “/” key is encountered in a macro, the program interprets macros by reference to a different (<i>e.g., </i>the Quattro) menu tree. With Key Reader off, Borland’s programs cannot correctly interpret 1-2-3 macros.</p>

<p class=Paragraph>Quattro and Quattro Pro version 1.0 did not contain the Key Reader feature; they contained only the emulation interface. Thus in these programs, the user could execute Lotus macros only when the user was employing the emulation interface; <i>i.e., </i>using Lotus 1-2-3 menus for display, interpreting user commands, and executing macros.</p>

<p class=Paragraph>The Key Reader was first introduced in Quattro Pro version 2.0. Quattro Pro version 2.0, 3.0, and 4.0 contain <i>both </i>the emulation interface and the Key Reader feature (which is used from the native menus).</p>

<p class=Paragraph>Borland removed the emulation interface from Quattro Pro version 4.01 (and subsequent releases of Quattro Pro) after the <i>Borland II </i>decision in this case allowed partial summary judgment for Lotus. Thus, Quattro Pro versions 4.01, SE, and Quattro Pro for Windows contain the Key Reader feature but have no 1-2-3 emulation interface.</p>

<h2>B. Copying.</h2>

<p class=Paragraph>In developing Key Reader, Borland modified portions of the earlier Quattro Pro programs that contained the full 1-2-3 emulation interface. Accordingly, I begin with a review of how the Lotus menu tree was copied into the Quattro Pro emulation interface before analyzing how that was, in turn, incorporated into Key Reader. <span class=SourcePN>&lt;831 F.Supp. 228&gt;</span><A name="831F.Supp.228"></A> </p>

<h3>1. The 123.MU file.</h3>

<p class=Paragraph>The actual menu tree for the Quattro Pro emulation interfaces (versions 1.0, 2.0, 3.0, and 4.0) was in a file labeled “123.MU”. Thus, when the program was running and the user had selected the 1-2-3 emulation interface, the program would refer to the 123.MU file to determine the form of menu commands and menu structure used to present the set of executable operations to the user, interpret user commands, and interpret macros. If the user had selected a different interface, <i>e.g., </i>one using the Quattro native menus, the program would refer to a different file for the menu commands and menu structure for display, interpretation of commands, and macro execution.</p>

<p class=Paragraph>A text print-out of portions of the 123.MU file is in evidence under seal as Exhibit 13. The parties have included, however, the first page of this print-out in the public record. <i>See </i>Docket 311, Exh. A. An examination of the print-out demonstrates that the entire Lotus menu tree is copied into the file, with differences in indentation detailing the menu structure. That is, the structure of the menus and submenus is recorded in the file by changes in indentation. As explained in the Opinion for Phase I, when the program is using the 123.MU file as the source for its menus, it presents to the user a virtually identical copy of the Lotus menu tree (with Borland’s additional menu commands inserted into the tree).</p>

<h3>2. Key Reader files.</h3>

<p class=Paragraph>As the above explanation of macros suggests, interpretation of Lotus macros requires that the program treat the characters in the macro text as though they were keystrokes into a spreadsheet program using the Lotus menu tree (except for the characters in the macro text that are special commands in the Lotus macro language).</p>

<p class=Paragraph>I find that, to implement the Key Reader (or at least that portion of the Key Reader that interprets characters from the Lotus menu tree), Borland began with the 123.MU file from the emulation interface. Borland then prepared a new file by reproducing the old 123.MU file but with only the first letter of each menu command name where the entire Lotus menu command name appears in the old 123.MU file. <i>See </i>Warfield Dep’n, IX:43. Put another way, the point is that to implement Key Reader Borland used a program file containing the same copy of the 1-2-3 menu tree structure and commands that Borland had used in its emulation <span class=SourcePN>&lt;30 USPQ2d 1098&gt;</span><A name="30USPQ2d1098"></A> interface, but with each menu command name stripped of everything after the first letter. Borland then appended this copy of the “stripped menu tree” to its quattro.mu file.</p>

<p class=Paragraph>At various stages, Borland introduced other changes in how the menu structure is recorded in the stripped file, altering parentheses or indentation, etc. For example, I find that Borland may have altered the symbols used to record Lotus’s menu structure, inserted the word “PICKLETTER” before the first letter of the menu command, or made other changes. <i>Compare </i>Exhibit 13 <i>with</i> Exhibit 517; <i>see </i>Warfield Dep’n, IX:43 at 148-49. Some of these things may actually appear in the old 123.MU file—Exhibit 13 contains only portions of the old 123.MU file. <i>See </i>Warfield Dep’n, IX:43 at 107-109, 148-49. In any event, I have considered the file and possible changes. I find that none of these changes is material to the scope or nature of copying from the Lotus 1-2-3 program.</p>

<p class=Paragraph>In short, I find that the Key Reader file contains a virtually identical copy of the Lotus menu tree structure, but represented in a different form and with first letters of menu command names in place of the full menu commands names.</p>

<p class=Paragraph>Borland contends that the command letters copied from Lotus 1-2-3 that are in Borland’s Key Reader files are not in the same order as displayed on the screen in Lotus 1-2-3. That is, if one reads sequentially down the Key Reader file, one encounters the Lotus commands in a different order than when reading the menus from the display screen while running Lotus 1-2-3. This is true, however, only in the sense that the menu structure of Lotus 1-2-3 is represented in a different way in the Key Reader <i>file </i>than on the Lotus 1-2-3 <i>display screens; </i>in the file, the structure is detailed by differences in indentation (or other means) rather <span class=SourcePN>&lt;831 F.Supp. 229&gt;</span><A name="831F.Supp.229"></A> than through display on the screen. I find that the file (in evidence under seal, Exhibit 517) fully delineates a virtually identical copy of the menu structure of Lotus 1-2-3 including the first letter of each menu command in the corresponding location in the copy of the menu structure.</p>

<p class=Paragraph>Because these menus are used in interpreting macros but are never fully displayed to the user, the parties have sometimes referred to these as “phantom menus.”</p>

<p class=Paragraph>In sum, to interpret macros, Borland’s programs use a file with phantom menus consisting of a virtually identical copy of the Lotus menu tree that Borland used for its emulation interface, but with only the first letter of each menu command name where the complete menu command name previously appeared.</p>

<h2>C. Copyrightability Issues.</h2>

<h3>1. Renewed and new arguments concerning definition of the idea.</h3>

<p class=Paragraph>Borland contends that copyright protection covering the structure of the 1-2-3 menu tree and the first letters of the commands in the 1-2-3 menu tree (<i>i.e.,</i> Borland’s phantom menus) would be equivalent to copyright protection for a “system” or “method” of communication between the user and the program. Thus, Borland argues that copying of the 1-2-3 menu tree structure and first letters of command names is a necessary part of any <i>system</i>for interpreting Lotus 1-2-3 macros. Citing the proposition that copyright law does not protect a “system”, <i>see </i>17 U.S.C. Section 102(b), Borland argues that the Lotus copyright cannot extend to Borland’s phantom menus.</p>

<p class=Paragraph>Lotus responds that Borland has not proved that copying of any part of the menu tree is necessary for running or translating macros.</p>

<p class=Paragraph>As a preliminary matter, I observe that the parties, witnesses (and the court, in some instances) have not used the terms “macro translation,” “macro conversion,” “macro execution,” and “macro compatibility” with precision during the phase II trial and earlier proceedings. In order to avoid possible future misunderstanding, I will explain the ambiguity in use of these terms before proceeding farther.</p>

<p class=Paragraph>Macro “conversion” refers to translating a macro that was written using Lotus 1-2-3 into a macro written in a form for use in another program. For example, the macro “/rfc- - “ in Lotus may be translated, using the macro translation assistant in Excel 2.1, into an Excel 2.1 macro having the text:</p>

<p class=BlockQuote>=SET.NAME (“Selection Save”, SELECTION ())</p>

<p class=BlockQuote>=SET.NAME (“Range3”, SELECTION ())</p>

<p class=BlockQuote>=DISPLAY (FALSE)</p>

<p class=BlockQuote>=SELECT (Range3)</p>

<p class=BlockQuote>=FORMAT.NUMBER (“$#,##0.00; ($#,##0.00)”))</p>

<p class=BlockQuote>=RETURN ()</p>

<p class=Paragraph>This macro text is written in the Excel macro language and is executed by reference to the Excel menus. Thus, formatting a single cell to be displayed in monetary units with two decimal places (the result of the “/rfc- - “ macro in Lotus) may be achieved in Excel 2.1 by selecting a single cell in an Excel spreadsheet followed by selection of the “Format” menu command, the “Number” command in the submenu of Format, then the “$#,##0.00;($#,##0.00)”) (currency) <span class=SourcePN>&lt;30 USPQ2d 1099&gt;</span><A name="30USPQ2d1099"></A> leaf (compare with the second to last line of the Excel macro).</p>

<p class=Paragraph>This facility for conversion of macros may also be referred to as a “one-time macro translator.” The translator takes a Lotus macro and converts it into a macro written in a different macro language, for use with a different menu tree. Once the translation has been made, a user may run the translated macro as frequently as desired in the other program. Because the macro is written in a different macro language, the program need not refer to a copy of Lotus’s menu tree to run the (translated) macro. Thus in <i>Borland II,</i> I observed that:</p>

<p class=BlockQuote>I need not and do not decide whether Borland is prohibited from reading and interpreting macros that have been created by users of 1-2-3. Had Borland created a program that read users’ 1-2-3 macros and converted them to macros for use in the Quattro programs’ native modes, so that they could be interpreted, executed, <span class=SourcePN>&lt;831 F.Supp. 230&gt;</span><A name="831F.Supp.230"></A> modified, debugged, etc. by resort to Borland’s command hierarchy, that would have presented a different case from the one now before me.</p>

<p class=Paragraph>799 F.Supp. at 214. In other words, I did not decide issues concerning one-time translation of macros into a different macro language, such that the macro could be executed, modified, and debugged without reference to copies of the Lotus menu tree.</p>

<p class=Paragraph>Alternatively, consider a continuous macro “interpreter.” This facility executes Lotus macros by referring to copies of the Lotus menu tree contained within the program. Macro interpretation may thus be viewed as continuous “translation” of macros as each macro is executed, or “on-the-fly” interpretation. Each time a macro is executed, modified, or debugged, the macro remains written in the Lotus macro language. Each time a macro is executed, modified or debugged, the program refers to the Lotus menu tree or structure.</p>

<p class=Paragraph>Both one-time conversion and on-the-fly interpretation may be referred to as “macro translation,” as providing an ability to “run” Lotus macros, and as providing “macro compatibility” with Lotus. For both, the user may begin with a Lotus macro and run the macro either by translating it first (one-time translation), or by parsing it with reference to the Lotus menu tree structure each time the user runs the macro (on-the-fly).</p>

<p class=Paragraph>An example of the confusion in terms is demonstrated by testimony from Borland’s Chief Executive Officer, Phillipe Kahn. Kahn testified that “macro translation was not a viable way to do things.” I:13 at 100. From the context of this testimony, I understand the testimony to refer to one-time “macro translation” rather than what Borland now refers to as (on-the-fly) “macro translation” performed by Key Reader.</p>

<p class=Paragraph>Borland’s Key Reader does not perform one-time translation such as Excel 2.1 does. Rather, Key Reader interprets macros on-the-fly, by reference to “phantom” menus that contain a copy of the Lotus menu tree.</p>

<p class=Paragraph>In clarifying this terminology, I do not decide whether copying of the Lotus menu structure for the purpose of one-time translation rather than on-the-fly interpretation should be accorded different treatment under copyright law. Also, I do not decide any issue concerning who (if anyone) owns the copyright in a macro written by a user in reliance on expression found in the Lotus 1-2-3 menu tree, or who (if anyone) owns the copyright in a translation into another language of a macro written in reliance on Lotus 1-2-3. These issues are not before the court. Rather, I make clear that I decide <i>only </i>those issues raised by Borland’s Key Reader; <i>i.e., </i>only issues involved in on-the-fly interpretation using Borland’s “phantom” menus.</p>

<p class=Paragraph>Having clarified the terminology, I now reject Lotus’s argument that on-the-fly macro interpretation does not require copying from the Lotus menu structure and first letters of the command names. To interpret a macro, the program must use the Lotus 1-2-3 menu structure. If a program did not have a representation of the 1-2-3 menu hierarchy somewhere within the program code (or in a file that is used by the code), then there is no way that the program could understand that “rfc” refers to a path through a menu tree to the specific executable operation that changes a cell or cells appearance to monetary units (<i>i.e.,</i> a path through the range and format menus to the currency leaf). Whether the menu tree is copied into a file or directly into the code of a program does not make a difference. The scope of copying of the menu tree is the same whether done in one computer language, a different language, or in a file. Accordingly, I reject Lotus’s contention that no part of the 1-2-3 menu tree need be copied to interpret 1-2-3 macros.</p>

<p class=Paragraph>Nevertheless, I also reject Borland’s contention that the menu tree structure and first letters of the menu commands constitute a “system” or “method,” as those terms are used in copyright law.</p>

<p class=Paragraph>Of course, it is possible to think of the Lotus 1-2-3 menu tree as a “system” for translating user keystrokes into executable operations (whether the keystrokes are typed into the keyboard or are taken from the text of a macro command). In the same way, a <span class=SourcePN>&lt;30 USPQ2d 1100&gt;</span><A name="30USPQ2d1100"></A> book may be thought of as a system for <span class=SourcePN>&lt;831 F.Supp. 231&gt;</span><A name="831F.Supp.231"></A> communicating various ideas and images to readers. Indeed, the only way of conveying each of the exact images of “Gone With the Wind” in the same order as in “Gone With the Wind” is to copy at least a great deal of the nonliteral expression in the book, if not the precise words of the book as well. Nevertheless, copyright protection extends both to the specific words of “Gone With the Wind” and to nonliteral elements of the novel. Accordingly, the ability to describe a work as a “system” is not decisive of whether the work is a “system,” or instead is protected expression, under copyright law.</p>

<p class=Paragraph>In calling the copying that is contained in the phantom menu tree a “system,” one may attempt to distinguish the copying found in the phantom menus from copying of a book on the following grounds. A book communicates to the reader. The phantom menus, however, permit the user to communicate commands to the program. Thus, one may contend that the phantom menu trees constitute a method or system for the user to communicate executable commands rather than a system (such as a book) for communicating thoughts to the reader.</p>

<p class=Paragraph>For the following reasons, I reject this basis for concluding that, in creating the phantom menus, Borland copied a system and not its expression. First, like Lotus’s menu tree, the protected expression of a compilation may be viewed as a system for accessing information. The purpose of a compilation is to communicate facts. The specific facts communicated, however, are not copyrightable. Copyright protects only the selection, arrangement and manner of presentation of the facts (to the extent that those elements meet the other requirements for copyrightability). <i>See Feist Publications Inc. v. Rural Tel. Serv. Co.,</i> 111 S.Ct. 1282 [<A HREF="http://iplaw.bna.com/iplw/display/link_res.adp?lt=email&fname=uspq2d_18_1275" title="Link to case for BNA subscribers">18 USPQ2d 1275</A>] (1991). The selection, arrangement, and manner of presentation in a compilation may provide the user with a <i>method </i>or systematic manner of accessing the (uncopyrightable) facts. Thus, copyright law protects only that part of a compilation that the reader actually <i>uses </i>for selection of facts that the reader wants to know. Nevertheless, the expressive aspects of a compilation remain copyrightable.</p>

<p class=Paragraph>Accordingly, I conclude that the fact that the copied menu structure and first letters of the menu commands may be used to specify executable operations does not bar a finding that these elements are copyrightable. For the reasons explained in detail in Sections II.A.1 and II.B.2.b of the Phase I Opinion, the structure of the menu tree including its designated keys for invoking commands (<i>i.e., </i>what Borland copied into the phantom menus) may also be viewed, in a light favorable to Borland, as a type of selection and arrangement of the executable operations in Lotus 1-2-3. The fact that the phantom menus may be used by a “reader” (whether directly or through the text of a macro) to access Lotus 1-2-3’s executable operations does not compel a conclusion that this constitutes a system. <i>See also Paperback,</i> 740 F.Supp. at 72-73 (rejecting argument that the macro language is a non-copyrightable element of the program).</p>

<p class=Paragraph>Similarly, a program’s computer code may be described as a system. Computer code consists of a series of commands that the user issues to the computer by running the program. The commands are written in such a way that the computer code as a whole is a system for communicating the program’s functionality to the computer. Nevertheless, Borland cannot and does not dispute that computer code is copyrightable.</p>

<p class=Paragraph>Borland’s contention that the menu tree structure is a system, or is strictly utilitarian in nature, raises again the same problem of defining the “idea,” “system,” “process,” “procedure,” or “method” of Lotus 1-2-3 that I have addressed since the beginning of this case. Borland wishes the court to define the “idea,” “system,” “process,” “procedure,” or “method” of Lotus 1-2-3 as including the ability to interpret macros written for use with Lotus 1-2-3. I rejected this contention in deciding the parties’ cross motions for summary judgment, <i>see </i>799 F.Supp. at 212-14, 216-17, and I reject this argument for the same reasons here. The fact that users of Lotus 1-2-3 have created macros in reliance on expressive aspects of Lotus 1-2-3 does not convert that expression into a part of the “system.” That Borland wishes to copy protected expression contained in Lotus’s menu <span class=SourcePN>&lt;831 F.Supp. 232&gt;</span><A name="831F.Supp.232"></A> tree for what Borland contends is a utilitarian purpose also does not turn that expression into a “system” under copyright law.</p>

<p class=Paragraph><i>See Id</i>. at 213-14. <i>See also Mazer v . Stein,</i> 347 U.S. 201 [<A HREF="http://iplaw.bna.com/iplw/display/link_res.adp?lt=email&fname=uspq_100_325" title="Link to case for BNA subscribers">100 USPQ 325</A>] (1954) (use of statue as lamp does not bar copyright protection on expression in statue); 1 Nimmer on Copyright Section 2.18 [D] at 2-207 (“If, however, there is a copying of the copyrightable expression, then an infringement should be found, even if the defendant employs the material for use rather than explanation.”).</p>

<p class=Paragraph>Borland nevertheless contends that according copyright protection to the menu structure and first letter of the command names would impermissibly protect a <span class=SourcePN>&lt;30 USPQ2d 1101&gt;</span><A name="30USPQ2d1101"></A> “discretionary pattern of events or processes.” Section 102(b) provides:</p>

<p class=BlockQuote>In no case does copyright protection for an original work of authorship extend to any idea, procedure, process, system, method of operation, concept, principle, or discovery, regardless of the form in which it is described, explained, illustrated, or embodied in such work.</p>

<p class=Paragraph>17 U.S.C. Section 102(b). Borland quotes a proposal by the Information Industry Association to include the following language in Section 102(b):</p>

<p class=BlockQuote>However, copyright protection may exist in a collection of ideas or abstractions arbitrarily selected from a plurality of alternative ideas or abstractions or in a discretionary pattern of events or processes.</p>

<p class=Paragraph>(Docket No. 345 at 8 (quoting Copyright Law Revision: Hearings Before the Subcomm. on Courts, Civil Liberties, and the Admin. of Justice of the House Comm. on the Judiciary, 94th Cong., 1st Sess. 334 (1975))). Because Congress did not adopt this “exception,” Borland contends that Congress manifested an intent that a “discretionary pattern of events or processes” is not protected under copyright law and should be determined to be a “system” under section 102(b).</p>

<p class=Paragraph>Nothing Borland presents to the court, however, provides any explanation of why Congress did not include this language in the statute. Failure to adopt this language may manifest a Congressional belief that the language was unnecessary or irrelevant. Indeed, Congress did not adopt any statutory language denying copyright protection for “a collection of ideas or abstractions arbitrarily selected from a plurality of alternative ideas or abstractions or in a discretionary pattern of events or processes.”</p>

<p class=Paragraph>In any event, the explanatory language accompanying the proposal indicates that the proposal was intended to assure that copyright protection is accorded to nonliteral aspects of computer program code. Thus, Borland’s argument may be interpreted as a contention that nonliteral aspects of computer code are not copyrightable, under section 102(b). If so, Borland’s argument has been consistently rejected by the courts, including this one.</p>

<p class=Paragraph><i>See Paperback,</i> 740 F.Supp. at 54; Arthur R. Miller, Copyright Protection for Computer Programs, Databases, and Computer Generated Works: Is Anything New Since CONTU?, 106 <i>Harv. L. Rev </i>. 978, 994-96 nn. 78-88 (March 1993) (collecting cases). <i>See also Commuter Assocs. Int’l. Inc</i>.<i>v . Altai. Inc.,</i> 982 F.2d 693, 702 (2d Cir. 1992) (“We have no reservation in joining the company of those courts that have already ascribed to this logic [that non-literal structures of computer programs are protected by copyright].”).</p>

<p class=Paragraph>I again reject the argument that copyright cannot extend to nonliteral aspects of a computer program. Moreover, Borland is wrong when it argues that, by failing to adopt the proposed statutory language, Congress manifested any intent concerning the definition of “system” in section 102(b).</p>

<p class=Paragraph>Borland next argues that its phantom menus must constitute a “system,” or be found “utilitarian” in nature, because the phantom menus do not appear on the screen and are not communicated to the user.</p>

<p class=Paragraph>This argument is readily dismissed. A user may never see computer code, but copyright protection is accorded to the code. Borland proposes a distinction on the ground that computer code may still be printed and read by someone. This distinction is vacuous for three reasons. First, the phantom menus may also be printed out; exhibit 517 is one copy. If one accepts the proposition that <span class=SourcePN>&lt;831 F.Supp. 233&gt;</span><A name="831F.Supp.233"></A> nonliteral aspects of computer code are copyrightable, the fact that the printed form of what Borland copied is not identical to any Lotus code or is not actually displayed to the user is not material to a finding that the Lotus menu structure contains copyrightable expression. Second, the fact that the phantom menus are not displayed does not mean that the user does not know they are there. Finally, copyright protection has been accorded to forms of computer code that are not generally intelligible to humans. <i>See Apple Computer, Inc</i>.<i> v . Franklin Computer Corp.,</i> 714 F.2d 1240, 1249 [<A HREF="http://iplaw.bna.com/iplw/display/link_res.adp?lt=email&fname=uspq_219_113" title="Link to case for BNA subscribers">219 USPQ 113</A>] (3d Cir. 1983) (object code), <i>cert. dismissed</i>, 464 U.S. 1033 (1984).</p>

<p class=Paragraph>Last, Borland argues that it has removed anything expressive in the Lotus menu tree from its phantom menus, leaving only the first letters of the command names as “markers” of the program’s functionality. <i>See </i>Docket No. 311 at 25-26. This is not the case. The letters serve as “markers” of the Lotus menu tree structure. Claiming that the “markers” are part of the functionality again incorrectly assumes that the “idea” or “function” of Lotus 1-2-3 includes menu structure and first letters of the command names. Moreover, for the reasons explained in the Phase I Opinion, I conclude that the menu tree structure is original and was not dictated or even substantially limited by functional considerations at the time of its development. Accordingly, I also conclude that the menu structure and organization (including the first letter of the commands, used to mark <span class=SourcePN>&lt;30 USPQ2d 1102&gt;</span><A name="30USPQ2d1102"></A> the structure) are part of the protectable expression found in the Lotus 1-2-3 program.</p>

<p class=Paragraph>In sum, I conclude that the Lotus menu structure, organization, and first letters of the command names are not within the definition of the “idea,” “system,” “process,” “procedure,” or “method” of the Lotus 1-2-3 program and constitute part of the protectable expression found in the program.</p>

<h3>2. Borland’s arguments concerning earlier “holdings” of this court .</h3>

<p class=Paragraph>In arguing that the copying found in Borland’s phantom menus is permissible, Borland places considerable reliance on what it characterizes as earlier “holdings of this court that expressly authorize a macro translator such as the Key Reader.” <i>See </i>Docket No. 345 at 1-3. As a preliminary matter, before the Key Reader complaint in this case, no party before this court had ever pressed any actual dispute or controversy between two parties over whether a specific macro “translation” facility, standing alone, would infringe Lotus’s copyrights. Article III courts decide only cases and controversies actually before the court. U.S. Const. Art. III, Section 2. Accordingly, I could not possibly have “held” in any earlier decision that macro translation as performed by the Key Reader is permissible under copyright law.</p>

<p class=Paragraph>After examining Borland’s specific citations to my earlier opinions, I also observe that in making this argument Borland has done a bit of interpretative twisting of the language of my earlier opinions. In earlier opinions, I have rejected a defendant’s arguments that were based on the incorrect premise that the defendant was somehow required to copy specific elements of the Lotus 1-2-3 program.</p>

<p class=Paragraph><i>See Paperback,</i> <span class=SourcePN>&lt;831 F.Supp. 234&gt;</span><A name="831F.Supp.234"></A> 740 F.Supp. at 78 (no showing that copying of entire interface is necessary for macro translation); <i>Borland II,</i> 799 F.Supp. at 218 (distinguishing <i>Crume v. Pacific Mut. Life Ins. Co.</i>, 140 F.2d 182, 184-85 [60 USPQ 359] (7th Cir.), <i>cert. denied,</i> 322 U.S. 755 [61 USPQ 543] (1944), as involving a system requiring use of only descriptive words, while in this case, varying full-word menu command names is not the only alternative for creating a different expression of the menu tree idea).</p>

<p class=Paragraph>Contrary to Borland’s arguments, I do not interpret the language in any of my earlier decisions rejecting these arguments as even remotely “authoriz [ing]” Borland to create its Key Reader. Explaining that a defendant’s argument is overbroad by use of an example is hardly equivalent to “holding” that the example is legally permissible. Moreover, in explaining my earlier decisions, I have twice observed that copying of expressive aspects of Lotus 1-2-3 may not be permissible under copyright law, even if that is the only way to achieve macro compatibility. <i>See Paperback</i>, 740 F.Supp. at 69; <i>Borland II</i>,799 F.Supp. at 214. In <i>Borland II,</i> I stated that “I need not and do not decide whether Borland is prohibited from reading and interpreting macros that have been created by users of 1-2-3.” 799 F.Supp. at 214. In short, I reject Borland’s attempt, by selective reading and interpretation of language from earlier opinions, to twist discussions contained in those opinions into “holdings” of this court.</p>

<p class=Paragraph>Finally, much of Borland’s argument rests on statements concerning whether a “macro translator” <i>such as in Excel 2.1 </i>infringes. Borland attempts to equate Key Reader with Excel 2.1 by labeling the Key Reader as a “translator.” As explained above, however, Borland has expanded the term “translator” from the one-time translation done in Excel 2.1 to include on-the-fly interpretation as done in Borland’s programs. In <i>Borland II,</i> I expressly did not decide issues concerning one-time translation, 799 F.Supp. at 214 (quoted <i>supra)</i>, let alone issues concerning an expanded definition of macro “translator”—a definition including on-the-fly interpretation of macros.</p>

<h2>D. Substantial similarity.</h2>

<p class=Paragraph>For the following reasons, I find that what Borland copied into the Key Reader phantom menus is substantially similar to Lotus 1-2-3.</p>

<p class=Paragraph>Contained in the phantom menus is a virtually identical copy of the menu structure and organization of Lotus 1-2-3, using the first letter of command names and other symbols to delineate that structure. Although Borland’s copy may use a different way of representing the menu structure than is contained within the Lotus code or displayed to the user while running Lotus 1-2-3, I find that what was copied by Borland (details of expression of the menu structure) is virtually identical to details of expression of the Lotus 1-2-3 program’s menu structure.</p>

<p class=Paragraph>I also conclude that differences in the method Borland uses to represent the menu tree structure in its phantom menus file does not negate a finding that the copied expression of the menu tree structure is substantially similar to the Lotus 1-2-3 program. First, copyright law protects nonliteral aspects of a copyrighted program. Thus, one need not copy the specific code of a program to <span class=SourcePN>&lt;30 USPQ2d 1103&gt;</span><A name="30USPQ2d1103"></A> infringe copyrights in the program. Second, Borland’s copying is analogous to a translation. No identity of words may exist in a translation into French of a book written in English. Nevertheless, the translated copy infringes by making a virtually identical copy of the book, but using a different method for representing the words and grammar structure. <i>See </i>17 U.S.C. Section 101 (“derivative work” includes translation); 17 U.S.C. Section 106(2) (copyright owner has exclusive right to prepare derivative works). Here, Borland created a virtually identical copy of the Lotus menu structure, but translated (nearly verbatim) the menu structure into a different language for representing menu structures.</p>

<p class=Paragraph>Borland next contends that the fact that the phantom menus are not displayed on the screen prevents a finding of substantial similarity. I reject this contention for the same reason that I rejected Borland’s argument that Borland copied only unprotected expression because the phantom menus are not displayed. <i>See</i> Section II.C.1, <i>supra </i>. That is, copyright law does not require that a program display its source or object code for copied elements of the code (literal or nonliteral) to be substantially similar.</p>

<p class=Paragraph>In addition, I find that a user would understand that Borland was using a copy of the Lotus menu structure when executing a macro. Consider, for example, the “/(?)” macro described above. With this macro, the user can traverse the Lotus menu structure precisely as though typing keys into the Lotus program. Similarly, Key Reader executes macros by sequentially parsing the (Lotus) macro text. This is demonstrated most clearly when one steps through macros in the Borland macro debugger. In addition, Borland’s experts contend that a user may not even look to the full command names when using Lotus menus or macros. <i>E.g </i>. Liddle Dec’n, VI:11, Para.53. I accept this point and reject Borland’s premise that the Borland programs do not demonstrate to the user that Borland copied Lotus’s menu structure.</p>

<p class=Paragraph><span class=SourcePN>&lt;831 F.Supp. 235&gt;</span><A name="831F.Supp.235"></A> Finally, I find that the Lotus menu structure, including the first letters of the command names that mark that structure, constitutes a substantial part of the Lotus expression. What Borland copied into Key Reader is that portion of the Lotus program that determines precisely how the user may select from among the executable operations in the program. Qualitatively, Borland’s phantom menus copy a substantial part of what a user would think of as constituting the Lotus program: the menu structure and the sequences of keystrokes for invoking each of Lotus’s executable operations.</p>

<h1>III. Affirmative Defenses.</h1>

<p class=Paragraph>Borland raises four affirmative defenses: waiver, laches, estoppel, and fair use. Each is considered below.</p>

<h2>A. Waiver.</h2>

<p class=Paragraph>The parties agree that in order to succeed in its waiver defense, Borland must prove that Lotus voluntarily and intentionally relinquished a known right. <i>See </i>Docket No. 311 at 26; Docket No. 338 at 20. That is, Borland must prove (1) voluntary and intentional relinquishment (2) of a right that Lotus was aware that it had.</p>

<p class=Paragraph>Borland points to six statements that it contends demonstrate an intention to relinquish any right to assert claims against Key Reader. The first three statements were made before the Key Reader had been introduced into any Borland product. For these statements, Lotus clearly could not have intended to waive claims specifically against Key Reader; Lotus was unaware of Key Reader. To overcome this obstacle, Borland contends that these statements reflect the intentional relinquishment of a known right to claim that <i>any </i>kind of macro “translator” infringes.</p>

<p class=Paragraph>The three statements made before Key Reader was released were made by the president of and counsel for Lotus during proceedings in the <i>Paperback</i>case. <i>See </i>Manzi Dep’n, IX:41; Lemberg Dep’n, IX:24; Trial Transcript, VIII:B.16. Each of the statements concerns whether Lotus intended to assert a claim of infringement against macro translation as performed by Excel.</p>

<p class=Paragraph>Borland first cites a statement by Jim Manzi, President of Lotus, made during a deposition in the <i>Paperback </i>case. The statement ends with the conclusion that “as far as I know, we have no issue of that [Excel] product.” Entirely missing from this statement is any evidence (1) that Manzi was aware of a right to prevent copying found in Excel (even this assumes, without support, that (a) there was copying, and (b) Manzi was aware of that copying), or (2) that Manzi intended to waive a claim against products other than Excel, with respect to any type of macro translation. This statement does not reflect an intention to relinquish any known rights.</p>

<p class=Paragraph>Borland next cites statements by Lotus’s General Counsel, Thomas Lemberg. The Lemberg statements, in evidence under seal, were not made in a context associated with waiver of rights. Accordingly, I cannot find a manifested intention to relinquish known rights based on these statements. In addition, <span class=SourcePN>&lt;30 USPQ2d 1104&gt;</span><A name="30USPQ2d1104"></A> having examined the Lemberg testimony, I also find that Mr. Lemberg was referring to one-time translation of macros into a different macro language, rather than macro translation in general, and more specifically, rather than referring to any program that executes macros by reference to copies of Lotus’s menus. Whether or not the distinction between one-time translation and direct execution of macros makes a material difference under copyright law is not significant; a party may waive rights without following the specific contours of copyright law. In any event, I find that the Lemberg statements do not demonstrate an intent to relinquish either a specific right or more generally a right to assert claims against all forms of macro translation or execution.</p>

<p class=Paragraph>Finally, Borland cites the <i>Paperback </i>trial transcript at a point where Lotus’s counsel, Henry Gutman, responded to a defendant’s contention that the defendant “had to” copy the entire Lotus user interface into its own spreadsheet product. Gutman argued that the premise of this argument is wrong because Excel had made a commercially successful product that did not copy the full interface, and in fact, included the ability to “translate [] and run in Excel” Lotus macros. <span class=SourcePN>&lt;831 F.Supp. 236&gt;</span><A name="831F.Supp.236"></A> VIII.B.16 at 45. Based on the materials before me, I find that (1) this statement was intended to discredit a defense argument and does not demonstrate that Lotus intended to waive any right, and (2) this does not demonstrate an intent to waive claims against all types of macro translation as opposed to Lotus’s understanding of Excel’s one-time translation.</p>

<p class=Paragraph>Moreover, each of the three statements cited above was made in the context of an infringement suit against companies that had copied the entirety of Lotus’s user interface. Up to the time of the three statements cited by Borland, Lotus had never been faced with issues raised by a program that did not fully copy the Lotus 1-2-3 interface but executed Lotus macros on-the-fly. Accordingly, for each of the statements I find that Borland has not proved (1) that, at the time of the statement, Lotus was aware of a right to bar copying of its menus when the copied menus were used only to execute macros on-the-fly, or (2) that Lotus intended to relinquish its right to assert claims against a program that directly executes Lotus macros by reference to copies of the Lotus menus, rather than by one-time translation of the macros into the product’s own macro language.</p>

<p class=Paragraph>Borland next cites three statements made by Lotus after Key Reader had been introduced into Borland’s products. The first is a response to a Borland request for admissions. According to the response, Lotus admitted that</p>

<p class=BlockQuote>it does not contend that the&nbsp;.&nbsp;.&nbsp;. ability to execute “macros” originally written using Lotus 1-2-3 by means of a conversion or translation program, standing alone, would infringe&nbsp;.&nbsp;.&nbsp;., but qualifies its admission to state that Lotus does contend that the 1-2-3 User Interface of Quattro and Quattro Pro, including, <i>inter</i> <i>alia, </i>its use of the 1-2-3 menu structure to provide the ability to execute macros originally written using Lotus 1-2-3, impermissibly copies protected expression contained in Lotus 1-2-3.</p>

<p class=Paragraph><i>See </i>VII:B.1. Later in the same document containing Lotus’s response to a request for admission, Lotus objected to a Borland request for an admission that the ability to execute Lotus macros while in Quattro Pro’s native mode does not infringe. Lotus’s objection was based on the ground that, as far as Lotus knew, Quattro Pro had no such ability. <i>See</i> VII:A.7.</p>

<p class=Paragraph>This admission does not constitute a waiver of a right to assert infringement claims against Key Reader. Lotus explicitly stated that it <i>does</i>contend that use of the Lotus menu structure to provide the ability to execute macros is impermissible, as done in Borland’s emulation interface. For the reasons explained in Section II.B above, I find that the Key Reader executes macros by using copies of the Lotus menu structure in a way very similar to the way that the 1-2-3 emulation interface executed macros. The qualification to the admission demonstrates an intent to pursue claims against a program doing precisely what Key Reader does.</p>

<p class=Paragraph>Borland contends, however, that the reservation should be interpreted as objecting to a facility such as Key Reader only when it is a part of an emulation interface, and not when it is incorporated into Borland’s native menu interface. Considering the circumstances of the admission, however, I find that such an interpretation is unreasonable. First, under Borland’s proposed interpretation, the qualification to the admission does not qualify the scope of the admission. The admission without the qualification was already limited to macro translation “standing alone.” Second, when specifically asked about running Lotus macros while using the native menu interface, Lotus’s answer demonstrated that Lotus was not then aware of Borland’s Key Reader feature. It is, therefore, more reasonable to interpret Lotus’s response as (1) a statement that Lotus was not contending in this suit that one-time translation or conversion infringes (a point very distinct from <span class=SourcePN>&lt;30 USPQ2d 1105&gt;</span><A name="30USPQ2d1105"></A> execution of Lotus macros by reference to “phantom” menus), or (2) a statement that Lotus was not contending that translation infringes because there was no need to make that claim in this case—Borland’s emulation interface infringed and the scope of that infringement was sufficient for claims against the products then at issue.</p>

<p class=Paragraph>If Borland wished later to be in a position to make its present assertion of waiver, it should have made full disclosure up front <span class=SourcePN>&lt;831 F.Supp. 237&gt;</span><A name="831F.Supp.237"></A> about Key Reader and obtained an unambiguous response. Borland’s present claim of waiver is an attempt, wholly without merit, to escape the consequences of its own litigation strategy. Lotus was entirely free to respond as it did without waiving any right. I find that Lotus’s response to the request for admission does not demonstrate an intent to relinquish a known right to assert claims against Key Reader, or a feature like Key Reader.</p>

<p class=Paragraph>Borland next points to a statement by Lotus’s counsel at a conference in June 1991. <i>See </i>VIII:B.17. In making the statement, Lotus’s counsel advised the court that if Borland “include [d] 1-2-3 menus and alternate user interface” in a product Lotus believed was about to be released, Lotus would seek a preliminary injunction. Borland’s contention that this constitutes a waiver of claims against any program that does not “display” the menus approaches, if not crosses, the line into frivolousness.</p>

<p class=Paragraph>Finally, Borland points to a footnote in one of Lotus’s briefs. <i>See </i>VIII:B.6. Here, Lotus was responding to Borland’s contention that it <i>had </i>to copy and display the entire menu tree to achieve macro compatibility. In the footnote, Lotus argues that Borland was ignoring <i>this court’s</i> distinction in <i>Paperback </i>between display of menus and executing macros by <i>“ </i>interpretation, translation or conversion (as then existed in Excel or the foreign language versions of Lotus 1-2-3).” The foreign language versions of Lotus 1-2-3 perform a one-time translation or conversion of macros from English releases of 1-2-3 into a macro using the foreign language version of 1-2-3. <i>See </i>Morgan Dec’n, VI:12. This does not constitute waiver for several independent reasons.</p>

<p class=Paragraph>First, the language focuses on the court’s distinction, not Lotus’s.</p>

<p class=Paragraph>Second, Lotus sought to rebut Borland’s argument by pointing out that macro compatibility might be achieved without display of the menus and cited examples of one-time macro conversion but not on-the-fly macro interpretation. In the circumstances here, I do not find that impeachment of a defendant’s argument by example demonstrates an intent to relinquish any rights.</p>

<p class=Paragraph>Third, at the time the argument was made, Borland had not released a product containing Key Reader but without the full emulation interface. Thus, Lotus was not faced with any decision over whether to assert claims against a program that copied Lotus’s menus, but only for on-the-fly interpretation. I find that this statement does not demonstrate an intention to relinquish a known right to pursue infringement claims against a program containing Key Reader.</p>

<p class=Paragraph>In sum, considering the statements proffered by Borland both separately and as a whole, I find that Borland has not proved that Lotus has waived a right to pursue its claims against Key Reader.</p>

<h2>B. Laches.</h2>

<p class=Paragraph>To succeed in its laches defense, Borland must prove that (1) Lotus inexcusably or unreasonably delayed in raising claims based on Key Reader, and (2) Borland was prejudiced by this delay.</p>

<h3>1. Delay.</h3>

<p class=Paragraph>Lotus first raised claims of infringement based exclusively on Key Reader in its motion for leave to file supplemental complaint, filed December 7, 1992. (Docket No. 250.) Borland contends that this is more than two years after Key Reader was introduced. As explained above, however, Key Reader was introduced into products that also contained the emulation interface (Quattro Pro 2.0, 3.0, and 4.0). I begin by examining whether Lotus’s delay wasunreasonable or inexcusable during the time period when Borland’s products included both the emulation interface and Key Reader. I then examine the delay in filing suit after Borland removed theemulation interface and marketed a product containing only Key Reader, <i>i.e.,</i> after Quattro Pro 4.01 was announced in August 1992.</p>

<p class=Paragraph>For the following reasons, I find that the delay in filing suit before Borland introduced Quattro Pro 4.01 into the market was both reasonable and excusable.</p>

<p class=Paragraph>First, even assuming Lotus was aware or should have been aware of Key Reader in <span class=SourcePN>&lt;831 F.Supp. 238&gt;</span><A name="831F.Supp.238"></A> Quattro Pro 2.0, 3.0, and 4.0, a fact disputed by Lotus, there is little reason that Lotus should have known (and no evidence that Lotus did know) that Key Reader was anything other than a link to the macro execution facility that is contained in the 1-2-3 emulation interface. In these circumstances, it would have been reasonable for Lotus to believe that if the emulation interface were<span class=SourcePN>&lt;30 USPQ2d 1106&gt;</span><A name="30USPQ2d1106"></A> removed Borland’s Key Reader would not function. Indeed, Borland’s Chief Executive Officer stated at a deposition in May 1991 that Quattro Pro would not be macro compatible with Lotus 1-2-3 if the 1-2-3 compatible menu tree were removed. <i>See </i>1:13 at 52. Thus, claims against the emulation interface might then have appeared to protect Lotus fully, without the added cost of asserting separate claims against Key Reader.</p>

<p class=Paragraph>Second, before Quattro Pro 4.01 was released, Lotus was pursuing its strongest claims against all of Borland’s existing spreadsheet products, <i>i.e.,</i> claims based on the emulation interface. In the circumstances of this case, I cannot say that Lotus was required to assert claims against each feature that Borland added to its (already) infringing products or be faced with the prospect of losing the right ever to assert claims against a program containing that feature. Until the emulation interface was removed, Lotus was not faced with a product that would not be found infringing without a determination that Key Reader infringes. I conclude that it was reasonable to wait to assert claims against Key Reader until resolution of this dispute was necessary and could be raised explicitly as a live issue.</p>

<p class=Paragraph>Third, to the extent Lotus was expressly pursuing claims against macro execution as performed by Borland’s emulation interface, <i>i.e.,</i>on-the-fly macro interpretation by reference to Lotus’s menu structure (<i>see</i> VII:B.l, quoted <i>supra)</i>, Lotus was pursuing claims against something very similar to Key Reader.</p>

<p class=Paragraph>Considering these factors, I find that Lotus’s failure to bring an action specifically directed at Key Reader for the time period from the incorporation of Key Reader in Quattro Pro 2.0 until release of Quattro Pro 4.01 was both reasonable and excusable because of Lotus’s pursuit of infringement claims against the emulation interface in each of Borland’s then existing products.</p>

<p class=Paragraph>Next, I consider whether Lotus’s delay in filing suit after Quattro Pro 4.01 was released was unreasonable or inexcusable. Quattro Pro 4.01 was released after the <i>Borland II </i>decision was issued on July 31, 1992. Lotus filed its motion for leave to file supplemental complaint approximately four months after Quattro Pro 4.01 was made public. A few months before Quattro Pro 4.01 was released, Lotus gave notice of an intent to preserve claims against Key Reader (in April 1992, <i>see</i> VIII:A.5). Borland acknowledged this notice. (<i>see </i>VIII:A.2.) I also note the propriety of taking some time to investigate how Key Reader works before filing a complaint. In light of the brevity of the time period, the nature of investigation of Key Reader that was reasonably required, and Lotus’s earlier notice of its intent to preserve claims against Key Reader, I find that Lotus did not unreasonably or inexcusably delay in bringing an action specifically directed at Key Reader. Further, I reject Borland’s contention that the motion to supplement the complaint was filed so late in the proceedings on the original complaint that Lotus’s delay was unreasonable. It was the late (and secretive) timing of the release of Quattro Pro 4.01 that resulted in the late timing of Lotus’s claims. Moreover, Lotus agreed to a short time schedule for preparing and presenting its claims for both of the first two Phases of the trial. Accordingly, I find that Lotus’s delay in filing claims against Key Reader was reasonable and excusable, despite the advanced stage of proceedings under the original complaint.</p>

<h3>2. Prejudice.</h3>

<p class=Paragraph>As an example of alleged prejudice caused by Lotus’s delay in bringing suit, Borland contends that an appeal of cop y rightability issues to the First Circuit has been delayed. To make this claim, Borland contends that it removed the emulation interface (but not the Key Reader) in order to expedite an appeal to the First Circuit. The record is barren of evidence to support what <span class=SourcePN>&lt;831 F.Supp. 239&gt;</span><A name="831F.Supp.239"></A> counsel contends was Borland’s motive for removing the emulation interface. In addition, even assuming <i>arguendo </i>that this unsupported assertion is true, I find that Borland has not proved prejudice. For the reasons explained on the record at the September 23, 1992 conference, I denied Borland’s motion for interlocutory appeal. This was before Lotus moved for leave to include claims against Key Reader in this case. Thus, before Lotus filed its motion for leave to supplement, I had already concluded that an interlocutory appeal was not appropriate. Borland has not demonstrated that it could have secured an interlocutory appeal of the summary judgment decision, even if Lotus never asserted claims against Key Reader. To demonstrate prejudice, Borland also points to costs in developing and advertising Key Reader. Even assuming these costs were appreciable, a finding that Borland provides little evidence to support, I find that these costs were not incurred <i>as a result </i>of any delay by Lotus. Of course, Lotus had not delayed at all in bringing suit before Key Reader was introduced into a Borland product. In any event, as to Quattro Pro 2.0, 3.0, and 4.0, these products have been found to infringe whether or not Key Reader was<span class=SourcePN>&lt;30 USPQ2d 1107&gt;</span><A name="30USPQ2d1107"></A> present. Borland points to no costs with respect to versions 2.0, 3.0, and 4.0 that might have been avoided had Lotus asserted infringement claims directed at Key Reader earlier. Moreover, Borland did not remove the emulation interface from Quattro Pro 2.0, 3.0, or 4.0, all released after Lotus had filed the complaintin this action. I find that Borland would have included Key Readeralong with the emulation interface in its products whether or not Lotus immediately asserted that Key Reader infringes. With respect to Quattro Pro 4.01 and later releases, Borland released these programs months after Lotus had sent a message (that Borland had acknowledged) that Lotus was seeking to preserve claims against programs containing Key Reader. (<i>See </i>discussion in preceding section.) I conclude that any prejudice suffered by Borland’s inclusion of Key Reader in Quattro Pro 4.01 and later releases was not caused by delay on Lotus’s part.</p>

<h2>C. Estoppel.</h2>

<p class=Paragraph>As was true with respect to the estoppel claims in Phase I, the parties apparently agree that to establish a defense of estoppel in relation to Phase II issues, Borland must prove that Lotus engaged in (1) conduct that induced Borland to change its position in good faith, or (2) conduct on which a reasonable person would rely. As I did in the Phase I Opinion, again without endorsing this specific formulation of the standard for deciding a claim of estoppel, I proceed, to Borland’s advantage, to apply the standard stated by the parties.</p>

<p class=Paragraph>In determining whether Borland has proved reasonable reliance on any conduct by Lotus, I consider first Borland’s inclusion of Key Reader in Quattro Pro versions 2.0, 3.0, and 4.0, then turn to inclusion of Key Reader in Quattro Pro 4.01 and later releases.</p>

<p class=Paragraph>Versions 2.0, 3.0, and 4.0 were released after Lotus filed suit claiming that Quattro and Quattro Pro infringe. Nevertheless, Borland included the emulation interface in each of these products. Accordingly I find that, even if Lotus had clearly and unequivocally stated an intention to assert claims against something like Key Reader, Borland would have included Key Reader in these products anyway. Borland did not rely on any statement by Lotus in developing Key Reader.</p>

<p class=Paragraph>For the following reasons, I also find that Borland has not proved that a reasonable person would have relied on any conduct by Lotus in developing or advertising Key Reader in versions 2.0, 3.0, and 4.0.</p>

<p class=Paragraph>Borland contends first that it relied on Lotus’s original complaint, Paragraphs17-19, to conclude that Lotus would never assert claims against a program that copied Lotus’s menu structure within the computer code but did not display the Lotus menu structure on the screen. This contention is without merit. The complaint alleged claims against products that did not have a Key Reader. The complaint focused on the emulation “user interface” because that is precisely the portion of the programs (in existence at the time the complaint was drafted), both as displayed on the screen and as implemented by the <span class=SourcePN>&lt;831 F.Supp. 240&gt;</span><A name="831F.Supp.240"></A> computer code, that infringes. In any event, without Borland’s computer code, there is no Borland emulation interface. The complaint cannot be read in any way other than as asserting claims for infringement based on Borland’s computer code. Finally, the premise to Borland’s argument, that Lotus knew or should have known enough about the computer coding of Quattro and Quattro Pro to make specific allegations in the complaint about the computer code is without support in the record. Borland’s claim that it reasonably relied on the original complaint as demonstrating an intention by Lotus to pursue infringement claims based only on Borland’s display of the interface and not on Borland’s code is baseless.</p>

<p class=Paragraph>Borland next cites three statements, made after Key Reader was first released in Quattro Pro 2.0, by Lotus executives or counsel. These three statements are the same statements that Borland cited in its waiver argument, <i>i.e.,</i> (1) the admission, (2) the statement at the June 1991 conference, and (3) a footnote in one of Lotus’s briefs. For the reasons explained in Section III.A, <i>supra,</i> I conclude that Borland could not reasonably rely on any of these statements as demonstrating an intent not to pursue claims against Key Reader. Moreover, to the extent that the statements and the definition of macro “translation” are ambiguous, reliance on those statements would be unreasonable. A reasonable person or company in Borland’s position would have sought clarification before relying on the statements as a position adopted by Lotus.</p>

<p class=Paragraph>In addition, each of these statements was made after Key Reader was introduced into Quattro Pro 2.0. Borland, when originally developing and introducing Key Reader, could not have relied on statements made later, after Key Reader had been developed. Nevertheless, Borland contends that it relied on these statements in retaining Key Reader in Quattro Pro 4.01 and later releases. As <span class=SourcePN>&lt;30 USPQ2d 1108&gt;</span><A name="30USPQ2d1108"></A> explained above, however, in April 1992, Lotus clearly stated (and Borland acknowledged) that Lotus wished to preserve claims against Key Reader. In light of this, I find that for Quattro Pro 4.01 and later releases, Borland could not have reasonably relied on the cited statements as demonstrating an intent by Lotus not to assert claims against Key Reader.</p>

<p class=Paragraph>Finally, Borland’s General Counsel avers that, when recommending to keep Key Reader in the program, he relied “most directly” on the court’s language in the <i>Borland II</i> summary judgment opinion. <i>See </i>VI:9, Paragraphs13-14. First, for the reasons explained in Section II.C.2, I find that Borland’s selective reading of the opinion and twisted interpretation of the court’s language is unreasonable; reliance on this language, therefore, also would be unreasonable. Second, I am not aware of any precedent for basing an estoppel defense not on conduct of the party alleged to be estopped, but on conduct of the court. Borland offers no authority to support this proposition. Instead, Borland contends that the court’s language reflects Lotus’s arguments. I reject this contention. To support such a contention, Borland would have to place in evidence Lotus’s arguments and conduct, rather than simply pointing to the court’s decision. I have examined the language Borland points to in Lotus’s earlier briefs and argument and reject Borland’s contention that Borland reasonably relied on Lotus’s statements or conduct.</p>

<p class=Paragraph>In any event, to the extent Borland relied on the court’s language in deciding to include Key Reader in Quattro Pro 4.01, Borland was not relying on Lotus’s conduct.</p>

<p class=Paragraph>Having considered the several instances of conduct cited by Borland both individually and as a whole, including any delay in filing suit, I find that Borland has not proved its estoppel defense.</p>

<h2>D. Fair Use.</h2>

<p class=Paragraph>Borland contends that copying of the Lotus menu structure and first letters of the menu commands is a fair use of Lotus’s copyrighted programs. The fair use doctrine is an “equitable rule of reason.” <i>Sony Corp. of Am. v. Universal City Studios, Inc., </i>464 U.S. 417, 448 [<A HREF="http://iplaw.bna.com/iplw/display/link_res.adp?lt=email&fname=uspq_220_665" title="Link to case for BNA subscribers">220 USPQ 665</A>] (1984) (quoting legislative history). The doctrine <span class=SourcePN>&lt;831 F.Supp. 241&gt;</span><A name="831F.Supp.241"></A> </p>

<p class=BlockQuote>permits courts to avoid rigid application of the copyright statute when, on occasion, it would stifle the very creativity which that law is designed to foster.</p>

<p class=Paragraph><i>Stewart v. Abend</i>, 495 U.S. 207, 236 [<A HREF="http://iplaw.bna.com/iplw/display/link_res.adp?lt=email&fname=uspq2d_14_1614" title="Link to case for BNA subscribers">14 USPQ2d 1614</A>] (1990) (quoting <i>Iowa State University Research Found., Inc. v. American Broadcasting Cos.,</i> 621 F.2d 57, 60 [<A HREF="http://iplaw.bna.com/iplw/display/link_res.adp?lt=email&fname=uspq_207_97" title="Link to case for BNA subscribers">207 USPQ 97</A>] (2d Cir. 1980)).</p>

<p class=Paragraph>Congress set forth four statutory factors to guide consideration of what constitutes a fair use. Section 107 of the Copyright Act provides that:</p>

<p class=BlockQuote>the fair use of a copyrighted work&nbsp;.&nbsp;.&nbsp;. for purposes such as criticism, comment, news reporting, teaching&nbsp;.&nbsp;.&nbsp;., scholarship, or research, is not an infringement of copyright. In determining whether the use made of a work in any particular case is a fair use the factors to be considered shall include– (1) the purpose and character of the use, including whether such use is of a commercial nature or is for nonprofit educational purposes; (2) the nature of the copyrighted work; (3) the amount and substantiality of the portion used in relation to the copyrighted work as a whole; and (4) the effect of the use upon the potential market for or value of the copyrighted work.</p>

<p class=Paragraph>17 U.S.C. Section 107. These factors are not exclusive. Each case is to be decided on its own facts. <i>See Harper &amp; Row</i>, <i>Publishers</i>,<i>Inc. v. Nation Enters.</i>, 471 U.S. 5.39, 560 [<A HREF="http://iplaw.bna.com/iplw/display/link_res.adp?lt=email&fname=uspq_225_1073" title="Link to case for BNA subscribers">225 USPQ 1073</A>] (1985).</p>

<h3>1. “Purpose and character of the use.”</h3>

<p class=Paragraph>The first statutory factor focuses primarily on whether the copied materials are used to secure profit.</p>

<p class=BlockQuote>The crux of the profit/nonprofit distinction is not whether the sole motive of the use is monetary gain but whether the user stands to profit from exploitation of the copyrighted material without paying the customary price.</p>

<p class=Paragraph><i>Harper &amp; Row,</i> 471 U.S. at 562. Section 107(1) contrasts a use that is “of a commercial nature” with a use that is for “nonprofit educational purposes.” According to the preamble in section 107, copying for “criticism, comment, news reporting, teaching&nbsp;.&nbsp;.&nbsp;., scholarship, or research” may be closer to being a “nonprofit educational use” than a commercial use.</p>

<p class=Paragraph>In the instant case, there can be little dispute that Borland copied from Lotus for “commercial” purposes. Borland sells its spreadsheet products for profit. The Key Reader is included to make the program more attractive to potential customers that have Lotus 1-2-3 macros. Borland has copied Lotus’s menu structure in order to enhance profits from sales of its spreadsheet products, without having secured a license to do so.</p>

<p class=Paragraph>Borland tries to minimize the impact of having a profit motive on its fair use defense <span class=SourcePN>&lt;30 USPQ2d 1109&gt;</span><A name="30USPQ2d1109"></A> by contending that Key Reader is actually used by consumers and only for interpreting the macros that the consumers have written. (Docket 345 at 19.) The consumer’s use of the part of Quattro Pro that Borland copied from Lotus, however, does not change the character of <i>Borland’s </i>use of the copied materials—to please consumers and increase sales. To contend that copying is closer to a fair use because customers want the copied materials is entirely without merit. “It is fundamentally at odds with the scheme of copyright to accord lesser rights in those works that are of the greatest importance to the public.” <i>Harper &amp; Row,</i> 471 U.S. at 559.</p>

<p class=Paragraph>Borland nevertheless contends that the present case is “almost identical” to <i>Lewis Galoob Toys</i>, <i>Inc. v. Nintendo of Am.</i>, <i>Inc.,</i> 964 F.2d 965 [<A HREF="http://iplaw.bna.com/iplw/display/link_res.adp?lt=email&fname=uspq2d_22_1857" title="Link to case for BNA subscribers">22 USPQ2d 1857</A>] (9th Cir. 1992), <i>cert. denied</i>, 113 S.Ct. 1582 (1993). In <i>Galoob,</i> the alleged infringer sold a product (the “Game Genie”) that allowed private users of Nintendo’s copyrighted games to use Nintendo’s games in an enhanced fashion. Nintendo did not argue that the Game Genie directly infringes Nintendo’s copyright. Rather, Nintendo argued that <i>use</i>of the Game Genie with a Nintendo game creates a derivative work of the copyrighted Nintendo game. <i>See id.</i> at 970. Thus, Nintendo’s infringement claims concerned only whether Galoob <i>contributed </i>to a consumer’s direct infringement of Nintendo’s copyright <span class=SourcePN>&lt;831 F.Supp. 242&gt;</span><A name="831F.Supp.242"></A> when the consumer used the Game Genie with a Nintendo game at home. For this reason, the opinion concerning fair use explicitly restricted its focus to whether a consumer’s private use of the Game Genie was a fair use (and not on Galoob’s use of the Game Genie—sale to the consumer for profit). <i>Id.</i> Private use by a consumer is a nonprofit use rather than a commercial use. <i>See id. See also Sony Corp.</i>, 464 U.S. at 449.</p>

<p class=Paragraph>The present case is readily distinguished from <i>Galoob.</i> Lotus contends and I have found that Borland copied and that the Quattro Pro products, including Key Reader, <i>directly </i>infringe Lotus’s copyright. The fair use issues in this case properly focus on Borland’s use (and not the consumer’s use) of the infringing products. Otherwise, a book store could copy and sell “Gone With the Wind” without permission. The book store would rely on the consumer’s private use of the copied material to claim that its copying is a fair use.</p>

<p class=Paragraph>Borland cites <i>Sega Enters. Ltd. v. Accolade</i>, <i>Inc.,</i> 977 F.2d 1510, 1522 [<A HREF="http://iplaw.bna.com/iplw/display/link_res.adp?lt=email&fname=uspq2d_24_1561" title="Link to case for BNA subscribers">24 USPQ2d 1561</A>] (9th Cir. 1992) for the proposition that “the commercial nature of a use is a matter of degree, not an absolute.” In finding that the commercial nature of the defendant’s use in <i>Sega </i>was of a lesser degree, the Ninth Circuit relied on the fact that the copied materials were not included in defendant’s final product. <i>Id.</i> Here, however, what Borland copied from Lotus is included in the product it sells to the public.</p>

<p class=Paragraph>Borland also relies on <i>Sega </i>to argue that Borland has performed its own creative work in developing Quattro Pro, and therefore, Key Reader merely “supplements” Borland’s own creative work. Assuming this to be true does not change the character of Borland’s commercial use of the copied material. Most of Borland’s own creative work, including its own menu structure, exists in Borland’s programs independently of whether or not Borland includes a Key Reader in its product. Borland used the copied materials to please customers and increase sales, independently of the creative work it did. In addition, the <i>Sega</i> case is readily distinguished. <i>Sega </i>involved “intermediate” copying; the defendant did not include copied materials in the final product. 977 F.2d at 1522. Here, Borland “supplemented” the product it sells to consumers with a facility including the impermissibly copied materials.</p>

<p class=Paragraph>In sum, I find that the “purpose and character” of Borland’s use of Key Reader is entirely commercial. This conclusion concerns just a single factor among a number of factors a court weighs in deciding a fair use defense. Nevertheless, when a defendant’s use of copied materials is determined to be commercial, that use is “presumptively an unfair exploitation of the monopoly privilege that belongs to the owner of the copyright.” <i>Abend,</i> 495 U.S. at 237 (quoting <i>Sony Corp.</i>, 464 U.S. at 451). <i>See also Harper &amp; Row</i>, 471 U.S. at 562.</p>

<h3>2. “The nature of the copyrighted work.”</h3>

<p class=Paragraph>This statutory factor focuses on locating a work, according to its nature, on the spectrum from factual works to fiction or fantasy. “The law generally recognizes a greater need to disseminate factual works than works of fiction or fantasy.” <i>Harper &amp; Row,</i> 471 U.S. at 563. Similarly, a work largely dictated by functional considerations is closer to the “factual works” end of the spectrum than the fiction end. <i>See</i> <i>Sega</i>, 977 F.2d at 1524.</p>

<p class=Paragraph>Also, even for factual works,</p>

<p class=BlockQuote>there are gradations as to the relative proportion of fact and fantasy. One may move from sparsely embellished maps and directories to elegantly written biography. The extent to which one must permit expressive language to be copied, in order to <span class=SourcePN>&lt;30 USPQ2d 1110&gt;</span><A name="30USPQ2d1110"></A> assure dissemination of the underlying facts, will thus vary from case to case.</p>

<p class=Paragraph><i>Harper &amp; Row</i>, 471 U.S. at 563 (quoting Gorman, <i>Fact or Fancy? The Implications for Copyright </i>29 J. Copyright Soc. 560, 561 (1982)). Thus, weighing this factor requires a determination of how much freedom of expression the author had in formulating the copyrighted expression. If there was little freedom, the expression is like a bare map. With greater expression <span class=SourcePN>&lt;831 F.Supp. 243&gt;</span><A name="831F.Supp.243"></A> found in the work, the scope of copyright protection is greater and a finding of fair use less likely.</p>

<p class=Paragraph>For the reasons explained in the Phase I Opinion, I concluded that Lotus had substantial freedom of expression in forming its menu tree. The degree of freedom of expression in creating a menu structure using only first letters of command names is no less than the degree of freedom in designing Lotus’s menu tree using full command names. Nevertheless, the menu tree is based on the set of executable operations selected for Lotus 1-2-3. Accordingly, I find that the copyrighted work in this case is similar to a “factual work,” but that copying from the substantial expression found in the menu tree is not remotely necessary for disseminating the underlying executable operations (or “facts”). I find that this factor does not weigh significantly in either party’s favor.</p>

<p class=Paragraph>Borland contends that the “utilitarian nature” of the menu tree weighs in favor of a finding of fair use. Lotus’s copyright does not, however, extend to aspects of the program that are utilitarian or functional and not expressive. Moreover, Borland’s reliance on <i>Sega</i> is misplaced. The <i>Sega </i>court determined that copying of protected expression was necessary in order to gain access to unprotected aspects of the program. For this reason, the <i>Sega</i> court determined that copyright protection for the code in <i>Sega </i>was entitled to a lower degree of protection than other literary works (<i>i.e.,</i> less protection against the “intermediate” copying done by the defendant in that case). 977 F.2d at 1526. Here, Borland’s copying was not necessary to examine unprotected aspects of Lotus 1-2-3.</p>

<h3>3. “Amount and substantiality of the portion used in relation to the copyrighted work as a whole.”</h3>

<p class=Paragraph>Borland created a virtually identical copy of the menu structure and first letters of command names from Lotus 1-2-3’s menu tree. This necessarily includes copying of the keystroke sequences used by Lotus to access executable commands and Lotus’s macro language. For the reasons explained in Section II.D, <i>supra,</i> I find that this is a substantial part of the copyrighted expression in Lotus 1-2-3.</p>

<p class=Paragraph>Borland argues that “it is difficult to see how Borland could use even less of 1-2-3.” Docket No. 345 at 21-22. The answer to this is simple. Borland could have copied none of Lotus’s expression, or (though I do not comment on the permissibility of doing so) less than the complete 1-2-3 menu structure and first letters of command names.</p>

<p class=Paragraph>The fact that Borland uses the menu tree structure and first letters of the command names only for macro translation is not significant in evaluating this statutory factor. “ [A] taking may not be excused merely because it is insubstantial with respect to the <i>infringing</i> work.” <i>Harper &amp; Row,</i> 471 U.S. at 565 (original emphasis).</p>

<p class=Paragraph>I find that this statutory factor weighs in favor of Lotus.</p>

<h3>4. “The effect of the use upon the potential market for or value of the copyrighted work.”</h3>

<p class=Paragraph>The fourth statutory factor focuses on whether “<i> some </i>meaningful likelihood of future harm exists.” <i>Sony Corp.,</i> 464 U.S. at 451 (original emphasis). To negate a claim of fair use, a copyright holder may show either “that the particular use is harmful, or that if it should become widespread, it would adversely affect the potential market for the copyrighted work.” <i>Id.</i> (holding that, for a noncommercial use, copyright holder must make this showing). “This inquiry must take account not only of harm to the original but also of harm to the market for derivative works.” <i>Harper &amp; Row</i>, 471 U.S. at 568.</p>

<p class=Paragraph>As noted in Section III.D.1, <i>supra,</i> a commercial use of the copied material is presumptively unfair. Thus, “ [i]f the intended use is for commercial gain, [the] likelihood [of future harm] may be presumed.” <i>Sony Corp.</i>, 464 U.S. at 451.</p>

<p class=Paragraph>In the present case, I find that there is a meaningful likelihood that Borland’s copying negatively affects the market for and value of Lotus’s copyright. Quattro Pro’s functionality is largely equivalent to Lotus 1-2-3’s functionality. <span class=SourcePN>&lt;831 F.Supp. 244&gt;</span><A name="831F.Supp.244"></A> The operations the programs perform on spreadsheets are similar in nature. From this, I infer that many users will not go to the expense of purchasing, maintaining, and updating both the Quattro Pro and Lotus lines of spreadsheet products.</p>

<p class=Paragraph>Borland’s inclusion of Key Reader caters to users who already own Lotus 1-2-3; <i>i.e., </i>users that have developed macros for use with Lotus 1-2-3. This may directly affect sales of Lotus 1-2-3 programs. For example, a company using Lotus 1-2-3 may decide to shift to use of Quattro Pro rather than <span class=SourcePN>&lt;30 USPQ2d 1111&gt;</span><A name="30USPQ2d1111"></A> purchasing additional copies of Lotus 1-2-3 for new employees. Inclusion of Key Reader may also have an impact on sales of updates to or new releases of Lotus 1-2-3. For example, Key Reader increases the likelihood that a user will shift to Quattro Pro rather than purchase an update to Lotus 1-2-3.</p>

<p class=Paragraph>For these reasons, I infer that there is a meaningful likelihood of harm to Lotus (by a negative impact on the market and a decrease in value of Lotus’s copyright) stemming from Borland’s use of Key Reader.</p>

<p class=Paragraph>Borland seeks to rebut this inference with evidence that Lotus’s share of the spreadsheet market has remained steady from the time before Borland introduced Key Reader to the present. I reject this argument for the following reasons.</p>

<p class=Paragraph>First, this statutory factor includes an examination of what would happen “if [the use] should become widespread.” <i>Sony Corp.,</i> 464 U.S. at 451. This is a necessary consideration. Otherwise, a local bookstore would be free under the fair use doctrine to copy and sell a popular book (without license) because the impact on the national market is negligible. Here, if consumers widely purchase Quattro Pro intending to use Key Reader, I find that the market for Lotus 1-2-3 products and value of the Lotus copyright would be diminished.</p>

<p class=Paragraph>Second, Borland provides no evidence that maintaining market share is equivalent to having a copyright of undiminished value. A number of factors other than a complete lack of impact on the market for Lotus 1-2-3 may explain a constant market share. For example, pricing of both 1-2-3 and competing products (including cut prices or lack of increase in prices of 1-2-3) may maintain a constant market share. Also, advertising might be increased to maintain market share. The evidence presented by Borland falls far short of supporting an inference that Lotus’s market has not been adversely affected.</p>

<p class=Paragraph>Third, even if Lotus can maintain a constant market share without increased costs associated with lower prices or higher expenses, this does not demonstrate that the copying found in Key Reader has not diminished Lotus’s market share from what it would be if Borland had not copied. Without Borland’s copying, Lotus’s market share may have increased.</p>

<p class=Paragraph>In short, I find that Borland’s limited evidence concerning market share is entirely insufficient to demonstrate that Lotus has not been harmed or to rebut the presumption that Borland’s commercial use of Key Reader presents a meaningful likelihood that Lotus will be harmed. This statutory factor weighs in favor of Lotus.</p>

<h3>5. Other factors</h3>

<p class=Paragraph>The statutory list of factors a court may consider in deciding the merits of a fair use defense is not exclusive. As an additional factor, Borland contends that public policy dictates that Borland’s use of Key Reader be considered a fair use. Borland argues that permitting Borland to market an “improved” spreadsheet product while maintaining macro compatibility for users of Lotus 1-2-3 stimulates (Borland’s) artistic creativity. In essence, Borland contends that, when forming new artistic expressions, Borland should be permitted to tap into the market for existing expression by copying not just be idea but by copying from the expression of the idea. I reject Borland’s arguments for the following reasons.</p>

<p class=Paragraph>First, this “new” factor is just another argument concerning the “purpose and character” of Borland’s use of the copied expression. Thus, I reject Borland’s argument for the same reasons that I concluded that Borland’s use of the copied materials is commercial. Borland is not entitled to rely on the <span class=SourcePN>&lt;831 F.Supp. 245&gt;</span><A name="831F.Supp.245"></A> consumer’s private use of the program for execution of macros to claim fair use.</p>

<p class=Paragraph>Second, even when barred from copying expression, Borland was and is free to create new expressions of the ideas contained in Lotus 1-2-3. Borland presents no evidence that providing users with macro compatibility, or the ability to execute macros by reference to copies of Lotus’s menus, is necessary to permit copying of the ideas found in Lotus 1-2-3. <i>Compare with Sega, </i>discussed <i>supra.</i> Borland has not demonstrated that allowing it to copy Lotus’s expression would stimulate creativity more than the general scheme of providing copyright protection for an author’s expression.</p>

<h3>6. Summary.</h3>

<p class=Paragraph>Each of the factors to be weighed in deciding whether Borland’s copying constitutes a fair use either weighs against a finding of a fair use, or is entitled to little or no weight. Considering all factors, I find that Borland’s copying is not a fair use of Lotus’s copyrighted expression.</p>

<h1>IV. Summary.</h1>

<p class=Paragraph>For the reasons explained above, I find that Borland’s Key Reader infringes Lotus’s copyrights. Further, I find that (1) Lotus has not waived claims against Key Reader, (2) Lotus is not barred by laches or estoppel<span class=SourcePN>&lt;30 USPQ2d 1112&gt;</span><A name="30USPQ2d1112"></A> from asserting claims against Key Reader, and (3) including expression copied from Lotus 1-2-3 in Borland’s Key Reader facility is not a fair use of the protected expression.</p>

<p class=Judge>Permanent Injunction August 19, 1993</p>

<p class=Paragraph>For the reasons stated in the July 31, 1992 Memorandum and Order, and for the reasons stated and on the Findings and Conclusions recited in the Opinion of June 30, 1993, as amended August 19, 1993 (the “Phase I Opinion”), and the Opinion of August 12, 1993, as amended August 19, 1993 (the “Phase II Opinion”), it is ORDERED, ADJUDGED, AND DECREED:</p>

<p class=Paragraph>1. Defendant Borland International, Incorporated “Borland”) has infringed plaintiff’s copyrights in the computer software program “Lotus 1-2-3” by its development, manufacture and sale of: (1) Quattro and Quattro Pro version 1.0, by Borland’s inclusion of its “1-2-3 emulation” interface; (2) Quattro Pro versions 2.0, 3.0, and 4.0, by Borland’s inclusion of its “1-2-3 emulation” interface and its “Key Reader” facility; and (3) Quattro Pro SE, 4.01 and Quattro Pro for Windows by Borland’s inclusion of its “Key Reader” facility.</p>

<p class=Paragraph>2. Acting under 17 U.S.C. Section 502(a), the court orders that Borland, its officers, agents, servants, employees and attorneys, and all persons in active concert or participation with them, are hereby permanently enjoined from manufacturing, selling, distributing, licensing, or continuing to license for manufacture, sale, distribution or sub-licensing</p>

<p class=Paragraph>(i) Quattro Pro versions 1.0, 2.0, 3.0, 4.0, SE, 4.01, and all versions of Quattro Pro for Windows that have been or are on the market on this date (August 19, 1993) (“Quattro Pro for Windows”), and (ii) any work that contains in any portion, component or module thereof, a copy of the Lotus 1-2-3 menu commands and/or menu structure, in any form. Borland may at any time, however, apply to this court for modification of this clause upon a showing of good cause for determining that Borland has developed or proposes to develop a product that is within this clause but for special reasons</p>

<p class=Paragraph>(a) the product is not infringing, or (b) an alternative form of remedy allowing marketing on specified conditions, including payment of royalties, is more appropriate than an injunction.</p>

<p class=Paragraph>3. In addition, upon entry of this Permanent Injunction, Borland shall forthwith take all necessary steps to terminate any existing licenses, distribution agreements or other arrangements pursuant to which it has manufactured, sold distributed or licensed any of Quattro, Quattro Pro version 1.0, 2.0, 3.0, 4.0, SE, 4.01 or Quattro Pro for Windows and it shall, at its own expense, on or before August 27, 1993, notify each and every other party to any such license, distribution agreement or other arrangement of the existence and terms of this Permanent Injunction. Borland shall take all reasonable measures necessary to ensure, so far as it can control, that all such manufacturers, distributors and resellers comply with the terms hereof, including reasonable measures to prevent the selling of infringing products, which may include, but does not require, repurchase of products, and which does not include a general recall.</p>

</div>

</body>

</html>







